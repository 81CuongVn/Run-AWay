var nt=Object.defineProperty;var at=(n,e,t)=>e in n?nt(n,e,{enumerable:!0,configurable:!0,writable:!0,value:t}):n[e]=t;var a=(n,e,t)=>(at(n,typeof e!="symbol"?e+"":e,t),t),Ae=(n,e,t)=>{if(!e.has(n))throw TypeError("Cannot "+t)};var ye=(n,e,t)=>(Ae(n,e,"read from private field"),t?t.call(n):e.get(n)),Ce=(n,e,t)=>{if(e.has(n))throw TypeError("Cannot add the same private member more than once");e instanceof WeakSet?e.add(n):e.set(n,t)},De=(n,e,t,s)=>(Ae(n,e,"write to private field"),s?s.call(n,t):e.set(n,t),t);import{P as l,m as ot,a as rt}from"./vendor.c2e44961.js";import ht,{HTTP as lt}from"https://cdn.jsdelivr.net/npm/drand-client/drand.js";const ct=function(){const e=document.createElement("link").relList;if(e&&e.supports&&e.supports("modulepreload"))return;for(const i of document.querySelectorAll('link[rel="modulepreload"]'))s(i);new MutationObserver(i=>{for(const o of i)if(o.type==="childList")for(const r of o.addedNodes)r.tagName==="LINK"&&r.rel==="modulepreload"&&s(r)}).observe(document,{childList:!0,subtree:!0});function t(i){const o={};return i.integrity&&(o.integrity=i.integrity),i.referrerpolicy&&(o.referrerPolicy=i.referrerpolicy),i.crossorigin==="use-credentials"?o.credentials="include":i.crossorigin==="anonymous"?o.credentials="omit":o.credentials="same-origin",o}function s(i){if(i.ep)return;i.ep=!0;const o=t(i);fetch(i.href,o)}};ct();const d=new l.Events.EventEmitter;var S;(function(n){n.UPDATE_ACTIVE="update-active",n.TO_PAUSE="to-pause",n.TO_GAME="to-game",n.RESUME_GAME="resume-game",n.TO_GAMEOVER="to-gameover",n.TO_EXPLAINER="to-explainer",n.RESUME_FROM_EXPLAIN="resume-from-explain",n.GO_GAMEOVER="go-gameover",n.GO_YOUSURVIVED="go-yousurvived",n.TO_CHUNKS="to-chunks",n.TO_TITLE="to-title",n.BACK_TO_GAME="back-to-game",n.TO_BOSS="to-boss",n.PAUSE_TO_TITLE="pause-to-title",n.PAUSE_TO_RESTART="pause-to-restart",n.PAUSE_TO_EXPLAINER="pause-to-explain"})(S||(S={}));var m;(function(n){n.GAMEPLAY="audio-gameplay",n.GAMEPLAY_STOP="audio-gameplay-stop",n.DEPLOY="audio-deploy",n.FIELD_FADE="audio-field-fade",n.FIELD_LOOP="audio-field-loop",n.FIELD_LOOP_STOP="audio-field-loop-stop",n.FIELD_START="audio-field-start",n.COLLECT="audio-collect",n.MENUSELECT="audio-menu-select",n.PLAYER_FOOT="audio-player-footsteps",n.ENEMY_FOOT="audio-enemy-footsteps",n.TARGET_HIT="audio-target-hit",n.PLAYER_FOOT_STOP="audio-player-footsteps-stop",n.ENEMY_FOOT_STOP="audio-enemy-footsteps-stop",n.BOSSTRAP="audio-boss-trap",n.ENEMY_SHOOT="audio-enemy-shoot",n.GAS_TRAP="audio-gas-trap",n.LASERGUN="audio-laser-gun",n.LASERGUN_EQUIP="audio-laser-gun-equip",n.PROXY_TRAP="audio-proxy-trap",n.BOSS_FIGHT="audio-boss-trap",n.BOSS_FIGHT_STOP="audio-boss-trap-stop"})(m||(m={}));var Re;(function(n){n[n.GAMEPLAY=0]="GAMEPLAY",n[n.DEPLOYPSD=1]="DEPLOYPSD",n[n.FIELD_FADEOUT=2]="FIELD_FADEOUT",n[n.FIELD_LOOP=3]="FIELD_LOOP",n[n.FIELD_START=4]="FIELD_START",n[n.COLLECT=5]="COLLECT",n[n.MENU_SELECT=6]="MENU_SELECT",n[n.PLAYER_FOOTSTEPS=7]="PLAYER_FOOTSTEPS",n[n.ENEMY_FOOTSTEPS=8]="ENEMY_FOOTSTEPS",n[n.TARGET_HIT=9]="TARGET_HIT",n[n.BOSSTRAP=10]="BOSSTRAP",n[n.ENEMY_SHOOT=11]="ENEMY_SHOOT",n[n.GAS_TRAP=12]="GAS_TRAP",n[n.LASERGUN=13]="LASERGUN",n[n.LASERGUN_EQUIP=14]="LASERGUN_EQUIP",n[n.PROXY_TRAP=15]="PROXY_TRAP",n[n.BOSS_FIGHT=16]="BOSS_FIGHT"})(Re||(Re={}));const dt=["Gameplay_Track_1","DeployPSD","Energy_Field_Fade_Out","Energy_Field_Loop","Energy_Field_Start","CollectMineral","MenuSelect","Footsteps","EnemyFootsteps","TargetHit","BossTrap","EnemyShoot","GasTrap","LaserGun","LaserGunEquip","ProxyTrap","Boss_Fight_v3"],Le=[m.GAMEPLAY,m.DEPLOY,m.FIELD_FADE,m.FIELD_LOOP,m.FIELD_START,m.COLLECT,m.MENUSELECT,m.PLAYER_FOOT,m.ENEMY_FOOT,m.TARGET_HIT,m.BOSSTRAP,m.ENEMY_SHOOT,m.GAS_TRAP,m.LASERGUN,m.LASERGUN_EQUIP,m.PROXY_TRAP,m.BOSS_FIGHT];class ut extends l.Scene{constructor(){super("Bootstrap");a(this,"activeGame","");a(this,"allAudio",[])}editorCreate(){const e=this.add.image(320,180,"FufuSuperDino");e.alpha=0,e.alphaTopLeft=0,e.alphaTopRight=0,e.alphaBottomLeft=0,e.alphaBottomRight=0,this.events.emit("scene-awake")}create(){this.editorCreate(),this.defineSceneSwitchEvents(),this.loadSoundAssets(),this.defineAudioEvents(),this.startTitleScene()}defineSceneSwitchEvents(){d.on(S.UPDATE_ACTIVE,this.updateActiveScene,this),d.on(S.TO_PAUSE,this.switchToPauseMenu,this),d.on(S.TO_GAME,this.createNewGame,this),d.on(S.RESUME_GAME,this.resumeGame,this),d.on(S.TO_GAMEOVER,this.handleGameOver,this),d.on(S.TO_EXPLAINER,this.goToExplainer,this),d.on(S.RESUME_FROM_EXPLAIN,this.resumeFromExplainer,this),d.on(S.GO_GAMEOVER,this.goToGameOver,this),d.on(S.GO_YOUSURVIVED,this.goToYouSurvived,this),d.on(S.TO_CHUNKS,this.toChunks,this),d.on(S.TO_TITLE,this.goToTitle,this),d.on(S.BACK_TO_GAME,this.backToGame,this),d.on(S.TO_BOSS,this.gotoBoss,this),d.on(S.PAUSE_TO_TITLE,this.pauseToTitle,this),d.on(S.PAUSE_TO_RESTART,this.pauseToRestart,this)}defineAudioEvents(){for(let t=0;t<Le.length;t++)d.on(Le[t],()=>{this.allAudio[t].play()},this);const e=[{event:m.GAMEPLAY_STOP,sound:0},{event:m.PLAYER_FOOT_STOP,sound:7},{event:m.ENEMY_FOOT_STOP,sound:8},{event:m.FIELD_LOOP_STOP,sound:3},{event:m.BOSS_FIGHT_STOP,sound:16}];for(let t=0;t<e.length;t++){const s=e[t].sound;d.on(e[t].event,()=>{this.allAudio[s].isPlaying&&this.allAudio[s].stop()},this)}}loadSoundAssets(){dt.forEach((e,t)=>{t===3?this.allAudio[t]=this.sound.add(e,{loop:!0,volume:1}):t===7?this.allAudio[t]=this.sound.add(e,{loop:!0,volume:1}):t===8?this.allAudio[t]=this.sound.add(e,{loop:!0,volume:1}):this.allAudio[t]=this.sound.add(e)})}updateActiveScene(e){this.activeGame=e}pauseToRestart(){this.scene.stop("Pause"),this.scene.launch(this.activeGame),this.scene.launch("UI")}pauseToTitle(){["UI","Level","Chunk","Boss"].forEach(t=>{this.scene.isActive(t)&&this.scene.stop(t)}),this.scene.stop("Pause"),this.scene.launch("Title").bringToTop("Title")}goToTitle(e){this.scene.stop(e),this.scene.launch("Title")}backToGame(e){this.scene.stop(e),this.createNewGame()}toChunks(e){this.scene.stop(e),this.scene.launch("Chunk").bringToTop("Chunk"),this.scene.launch("UI").bringToTop("UI")}goToExplainer(){this.scene.pause("Level"),this.scene.pause("UI"),this.scene.launch("Explainer").bringToTop("Explainer")}goToGameOver(e){this.scene.stop("UI"),this.scene.stop(e),this.scene.launch("GameOver")}goToYouSurvived(e){this.scene.stop("UI"),this.scene.stop(e),this.scene.launch("YouSurvived")}resumeFromExplainer(){this.scene.stop("Explainer"),this.scene.resume("Level"),this.scene.resume("UI")}switchToPauseMenu(){this.scene.pause("Level"),this.scene.pause("UI"),this.scene.launch("Pause").bringToTop("Pause")}resumeGame(){this.scene.stop("Pause"),this.scene.isPaused(this.activeGame)&&(this.sound.resumeAll(),this.scene.resume(this.activeGame)),this.scene.isPaused("UI")&&this.scene.resume("UI")}startTitleScene(){this.scene.launch("Title")}createNewGame(){this.scene.stop("Title"),this.scene.launch("Level"),this.scene.launch("UI")}createNewChunk(){this.scene.stop("Title"),this.scene.launch("Chunk"),this.scene.launch("UI")}handleGameOver(){this.scene.stop("Level"),this.scene.stop("UI"),this.scene.launch("GameOver")}gotoBoss(){this.scene.stop("Chunk"),this.scene.launch("Boss")}}class _{constructor(e){a(this,"scene");this.scene=e.scene;const t=this.awake!==_.prototype.awake,s=this.start!==_.prototype.start,i=this.update!==_.prototype.update,o=this.destroy!==_.prototype.destroy;t&&this.scene.events.once("scene-awake",this.awake,this),s&&this.scene.events.once(l.Scenes.Events.UPDATE,this.start,this),i&&this.scene.events.on(l.Scenes.Events.UPDATE,this.update,this),(s||i||o)&&e.on(l.GameObjects.Events.DESTROY,()=>{this.scene.events.off(l.Scenes.Events.UPDATE,this.start,this),this.scene.events.off(l.Scenes.Events.UPDATE,this.update,this),o&&this.destroy()})}awake(){}start(){}update(e){}destroy(){}}class pt extends _{constructor(e){super(e);a(this,"gameObject");this.gameObject=e,e.__TileMapLayerPhysics=this}static getComponent(e){return e.__TileMapLayerPhysics}awake(){this.gameObject.setCollisionByProperty({collides:!0})}}class T extends _{constructor(e){super(e);a(this,"gameObject");a(this,"static",!1);a(this,"width",0);a(this,"height",0);a(this,"offsetX",0);a(this,"offsetY",0);this.gameObject=e,e.__Physics=this}static getComponent(e){return e.__Physics}start(){this.gameObject.scene.physics.add.existing(this.gameObject,this.static);const t=this.gameObject.body;t.setSize(this.width,this.height),t.setOffset(this.offsetX,this.offsetY)}destroy(){delete this.gameObject.__Physics}}class B extends _{constructor(e){super(e);a(this,"gameObject");a(this,"speed",10);this.gameObject=e,e.__JustMovement=this}static getComponent(e){return e.__JustMovement}moveUp(){const e=this.gameObject,t=e.body;!e.active||!t||t.setVelocity(0,-this.speed)}moveDown(){const e=this.gameObject,t=e.body;!e.active||!t||t.setVelocity(0,this.speed)}moveLeft(){const e=this.gameObject,t=e.body;!e.active||!t||t.setVelocity(-this.speed,0)}moveRight(){const e=this.gameObject,t=e.body;!e.active||!t||t.setVelocity(this.speed,0)}stayStill(){const e=this.gameObject,t=e.body;!e.active||!t||t.setVelocity(0,0)}}class X extends _{constructor(e){super(e);a(this,"gameObject");a(this,"cursors");a(this,"XKey");a(this,"CKey");a(this,"WKey");a(this,"AKey");a(this,"SKey");a(this,"DKey");a(this,"active",!1);this.gameObject=e,e.__KeyboardInput=this,this.XKey=this.gameObject.scene.input.keyboard.addKey(l.Input.Keyboard.KeyCodes.X),this.CKey=this.gameObject.scene.input.keyboard.addKey(l.Input.Keyboard.KeyCodes.C),this.WKey=this.gameObject.scene.input.keyboard.addKey(l.Input.Keyboard.KeyCodes.W),this.AKey=this.gameObject.scene.input.keyboard.addKey(l.Input.Keyboard.KeyCodes.A),this.SKey=this.gameObject.scene.input.keyboard.addKey(l.Input.Keyboard.KeyCodes.S),this.DKey=this.gameObject.scene.input.keyboard.addKey(l.Input.Keyboard.KeyCodes.D)}static getComponent(e){return e.__KeyboardInput}start(){const e=this.gameObject.scene;this.cursors=e.input.keyboard.createCursorKeys()}setActive(e){this.active=e}update(){if(!!this.active){if(l.Input.Keyboard.JustDown(this.WKey)&&this.executeWKeyJustDown(),l.Input.Keyboard.JustDown(this.AKey)&&this.executeAKeyJustDown(),l.Input.Keyboard.JustDown(this.SKey)&&this.executeSKeyJustDown(),l.Input.Keyboard.JustDown(this.DKey)&&this.executeDKeyJustDown(),l.Input.Keyboard.JustDown(this.CKey)&&this.executeCKeyJustDown(),l.Input.Keyboard.JustUp(this.CKey)&&this.executeCKeyJustUp(),this.XKey.isDown&&this.executeXKeyDown(),l.Input.Keyboard.JustUp(this.XKey)&&this.executeXKeyUp(),this.cursors.shift.isDown){this.cursors.up.isDown?this.executeShiftUp():this.cursors.down.isDown?this.executeShiftDown():this.cursors.left.isDown?this.executeShiftLeft():this.cursors.right.isDown?this.executeShiftRight():this.executeShiftArrowKeyUp();return}l.Input.Keyboard.JustUp(this.cursors.shift)&&this.executeShiftJustUp(),this.cursors.left.isDown?this.executeLeft():this.cursors.right.isDown?this.executeRight():this.cursors.up.isDown?this.executeUp():this.cursors.down.isDown?this.executeDown():this.executeKeyUp(),l.Input.Keyboard.JustDown(this.cursors.space)&&this.executeSpace()}}executeWKeyJustDown(){}executeAKeyJustDown(){}executeSKeyJustDown(){}executeDKeyJustDown(){}executeCKeyJustDown(){}executeCKeyJustUp(){}executeXKeyDown(){}executeXKeyUp(){}executeShiftJustUp(){}executeShiftUp(){}executeShiftDown(){}executeShiftLeft(){}executeShiftRight(){}executeShiftArrowKeyUp(){}executeKeyUp(){}executeLeft(){}executeRight(){}executeUp(){}executeDown(){}executeSpace(){}executeShift(){}}class W{constructor(e){a(this,"gameObject");this.gameObject=e,e.__DepthSortY=this}static getComponent(e){return e.__DepthSortY}}class Pe extends _{constructor(e){super(e);a(this,"gameObject");this.gameObject=e,e.__AnimationV2=this}static getComponent(e){return e.__AnimationV2}playAnims(e){const{character:t,direction:s,state:i,holdState:o}=e;if(!o){this.gameObject.play(`${t}-${s}-${i}`,!0);return}this.gameObject.play(`${t}-${s}-${i}-${o}`,!0)}playIdleFromWalk(){const t=this.gameObject.anims.currentAnim.key.split("-"),s=t[0],i=t[1];if(t.length<4)this.gameObject.play(`${s}-${i}-idle`,!0);else{const o=t[t.length-1];this.gameObject.play(`${s}-${i}-idle-${o}`,!0)}}}class mt extends _{constructor(e){super(e);a(this,"gameObject");this.gameObject=e,e.__CameraFollow=this}static getComponent(e){return e.__CameraFollow}start(){const{scene:e}=this.gameObject;e.cameras.main.startFollow(this.gameObject,!0),e.cameras.main.setBounds(0,-1e3,320,640*99,!0)}}let yt=0;class V{constructor(e,t){a(this,"id",(++yt).toString());a(this,"context");a(this,"states",new Map);a(this,"previousState");a(this,"currentState");a(this,"isChangingState",!1);a(this,"changeStateQueue",[]);this.id=t!=null?t:this.id,this.context=e}get previousStateName(){return this.previousState?this.previousState.name:""}isCurrentState(e){return this.currentState?this.currentState.name===e:!1}addState(e,t){var i,o,r;const s=this.context;return this.states.set(e,{name:e,onEnter:(i=t==null?void 0:t.onEnter)==null?void 0:i.bind(s),onUpdate:(o=t==null?void 0:t.onUpdate)==null?void 0:o.bind(s),onExit:(r=t==null?void 0:t.onExit)==null?void 0:r.bind(s)}),this}setState(e){if(!this.states.has(e)){console.warn(`Tried to change to unknown state: ${e}`);return}if(!this.isCurrentState(e)){if(this.isChangingState){this.changeStateQueue.push(e);return}this.isChangingState=!0,this.currentState&&this.currentState.onExit&&this.currentState.onExit(),this.previousState=this.currentState,this.currentState=this.states.get(e),this.currentState.onEnter&&this.currentState.onEnter(),this.isChangingState=!1}}update(e){if(this.changeStateQueue.length>0){this.setState(this.changeStateQueue.shift());return}this.currentState&&this.currentState.onUpdate&&this.currentState.onUpdate(e)}}var p;(function(n){n[n.BACK=0]="BACK",n[n.LEFT=1]="LEFT",n[n.FRONT=2]="FRONT",n[n.RIGHT=3]="RIGHT"})(p||(p={}));function M(n){switch(n){case 0:return"back";case 2:return"front";case 1:return"left";case 3:return"right";default:{console.warn("no such direction");return}}}var ge;(function(n){n[n.NONE=0]="NONE",n[n.GUN=1]="GUN"})(ge||(ge={}));var b;(function(n){n.EMPTY="empty",n.IDLE="idle",n.WALK="walk"})(b||(b={}));class gt{constructor(){a(this,"hp",100);a(this,"sanity",100);a(this,"energy",100);a(this,"inventory",[]);a(this,"isPSDDeployed",!1);a(this,"isGunDeployed",!1);ot(this)}changeEnergyBy(e){Phaser.Math.Clamp(this.energy+=e,0,100)}changeHealthBy(e){Phaser.Math.Clamp(this.hp+=e,0,100)}changeSanityBy(e){Phaser.Math.Clamp(this.sanity+=e,0,100)}setHealth(e){this.hp=e}setEnergy(e){this.energy=e}setSanity(e){this.sanity=e}setInventory(e){this.inventory=e}setPSDDeploy(e){this.isPSDDeployed=e}setGunDeploy(e){this.isGunDeployed=e}}const u=new gt;class Ge{constructor(e){a(this,"gameObject");a(this,"stateMachine");a(this,"direction",1);a(this,"item",0);a(this,"gunSprite");a(this,"gObjMovement");a(this,"gunPhysics");a(this,"gunMovement");a(this,"hand",0);this.gameObject=e,e.__HoldComp=this,this.stateMachine=new V(this,"hold-comp"),this.stateMachine.addState(b.EMPTY,{onEnter:this.onEmptyEnter}).addState(b.IDLE,{onEnter:this.onHoldIdleEnter}).addState(b.WALK,{onUpdate:this.onHoldWalkUpdate}),this.stateMachine.setState(b.EMPTY);const{scene:t}=this.gameObject;this.gunSprite=t.add.sprite(-20,-20,"front-gunonly-idle"),this.disableGun(),this.gObjMovement=B.getComponent(this.gameObject),this.gunPhysics=new T(this.gunSprite),this.gunPhysics.offsetX=32,this.gunPhysics.offsetY=32,this.gunMovement=new B(this.gunSprite)}static getComponent(e){return e.__HoldComp}enableGun(){if(!this.gunSprite||(this.gunSprite.setActive(!0),this.gunSprite.setVisible(!0),this.gunSprite.setDepth(this.gameObject.depth+60),!this.gunSprite.body))return;const e=this.gunSprite.body;e.enable=!0,this.gameObject.scene.physics.world.add(e)}disableGun(){if(!this.gunSprite||(this.gunSprite.setActive(!1),this.gunSprite.setVisible(!1),!this.gunSprite.body))return;const e=this.gunSprite.body;e.enable=!1,this.gameObject.scene.physics.world.remove(e)}onEmptyEnter(){this.hand=ge.NONE,u.setGunDeploy(!1),this.disableGun()}onHoldIdleEnter(){this.hand=ge.GUN,u.setGunDeploy(!0);const e=M(this.direction);if(!e){console.warn("direction should be defined");return}this.enableGun(),this.gunSprite.setPosition(this.gameObject.x,this.gameObject.y),this.gunMovement.stayStill(),this.gunSprite.play(`${e}-gunonly-idle`,!0)}assignGunSpeedTo(e){this.gunMovement.speed=e}onHoldWalkUpdate(){if(u.setGunDeploy(!0),!this.gObjMovement){console.error("just movement comp is not present on game object.");return}if(this.assignGunSpeedTo(this.gObjMovement.speed),this.hand<ge.GUN){console.error("game object should be holding something.");return}this.enableGun(),this.gunSprite.setPosition(this.gameObject.x,this.gameObject.y);const e=M(this.direction);if(!e){console.warn("direction should be defined");return}switch(this.direction){case p.BACK:{this.gunMovement.moveUp();break}case p.FRONT:{this.gunMovement.moveDown();break}case p.LEFT:{this.gunMovement.moveLeft();break}case p.RIGHT:{this.gunMovement.moveRight();break}}this.gunSprite.play(`${e}-gunonly-walk`,!0)}}var O;(function(n){n.EMPTY="empty",n.STAY="stay",n.WALK="walk"})(O||(O={}));class Fe{constructor(e){a(this,"gameObject");a(this,"stateMachine");a(this,"facingDir",0);a(this,"movingDir",0);this.gameObject=e,e.__AimComp=this,this.stateMachine=new V(this,"aim-comp"),this.stateMachine.addState(O.EMPTY,{onEnter:this.onEmptyEnter}).addState(O.STAY,{onEnter:this.onIdleEnter}).addState(O.WALK,{onUpdate:this.onWalkUpdate}),this.stateMachine.setState(O.EMPTY)}static getComponent(e){return e.__AimComp}checkCompRequirements(){return!(!T.getComponent(this.gameObject)||!B.getComponent(this.gameObject))}onEmptyEnter(){this.gameObject.clearTint()}onIdleEnter(){if(!this.checkCompRequirements())return;const e=B.getComponent(this.gameObject);this.displayAimMode(),e.stayStill()}setFacingDir(e){this.facingDir=e}setMovingDir(e){this.movingDir=e}onWalkUpdate(){this.displayAimMode();const e=B.getComponent(this.gameObject);if(this.facingDir===p.FRONT||this.facingDir===p.BACK)switch(this.movingDir){case p.LEFT:{e.moveLeft();break}case p.RIGHT:{e.moveRight();break}default:{console.warn("you cannot move along your facing direction.");break}}else switch(this.movingDir){case p.BACK:{e.moveUp();break}case p.FRONT:{e.moveDown();break}default:{console.warn("you cannot move along your facing direction.");break}}}displayAimMode(){this.gameObject.setTint(65535)}}var P;(function(n){n.EQIUP_IDLE="equip-idle",n.EQUIP_WALK="equip-walk",n.DEPLOY="deploy"})(P||(P={}));class He extends _{constructor(e){super(e);a(this,"gameObject");a(this,"stateMachine");a(this,"sprite");a(this,"facingDir",p.BACK);a(this,"isHold",!1);a(this,"isAimMode",!1);this.gameObject=e,e.__PSDComp=this;const t=this.gameObject.scene,{x:s,y:i}=this.gameObject;this.sprite=t.physics.add.sprite(s,i,"playerPSDeq",3),this.sprite.play("bppsd-back-idle-none"),this.stateMachine=new V(this,"PSD"),this.stateMachine.addState(P.EQIUP_IDLE,{onEnter:this.onEquipIdleEnter}).addState(P.EQUIP_WALK,{onUpdate:this.onEquipWalkUpdate}).addState(P.DEPLOY,{onEnter:this.onDeployEnter,onExit:this.onDeployExit}).setState(P.EQIUP_IDLE),this.sprite.setVisible(!1)}static getComponent(e){return e.__PSDComp}update(e){this.sprite.depth=this.gameObject.depth+10,this.updatePSDPos()}updatePSDPos(){this.sprite.setPosition(this.gameObject.x,this.gameObject.y)}setFacingDir(e){this.facingDir=e}setAimState(e){this.isAimMode=e}setHoldState(e){this.isHold=e}onEquipIdleEnter(){this.sprite.setVisible(!0),this.sprite.setVelocity(0,0),this.sprite.setPosition(this.gameObject.x,this.gameObject.y);const e=M(this.facingDir);let t="";if(this.isHold?t="hold":t="none",e==="front"){this.sprite.setVisible(!1);return}this.sprite.play(`bppsd-${e}-idle-${t}`,!0)}onEquipWalkUpdate(){if(this.facingDir===p.FRONT){this.sprite.setVisible(!1);return}if(this.sprite.setVisible(!0),this.isAimMode)return;const e=M(this.facingDir);let t="";this.isHold?t="hold":t="none",this.sprite.play(`bppsd-${e}-walk-${t}`,!0)}onDeployEnter(){this.sprite.setVisible(!1),this.gameObject.scene.events.emit("deploy-PSD")}onDeployExit(){this.gameObject.scene.events.emit("takeback-PSD")}}class q extends _{constructor(e){super(e);a(this,"gameObject");a(this,"selectSquare");a(this,"dir");this.gameObject=e,e.__SelectionSquare=this,this.dir=0}static getComponent(e){return e.__SelectionSquare}start(){const{scene:e,x:t,y:s}=this.gameObject;this.selectSquare=e.add.zone(t,s,32,32),e.physics.world.enable(this.selectSquare),this.selectSquare.body.setAllowGravity(!1),this.selectSquare.body.moves=!1}getSelectionSquare(){return this.selectSquare}setDir(e){this.dir=e}update(){this.showSquare(),this.updateSelectionSquare(this.dir)}showSquare(){const e=this.selectSquare.body;e.debugBodyColor=e.touching.none?65535:16776960}updateSelectionSquare(e,t=50){if(!this.selectSquare)return;const{x:s,y:i}=this.gameObject;switch(e){case p.FRONT:{this.selectSquare.setPosition(s,i+t);break}case p.BACK:{this.selectSquare.setPosition(s,i-.8*t);break}case p.LEFT:{this.selectSquare.setPosition(s-.7*t,i+16);break}case p.RIGHT:{this.selectSquare.setPosition(s+.7*t,i+16);break}}}}var v;(function(n){n.IDLE="idle",n.WALK="walk",n.HOLD="hold",n.HOLD_IDLE="hold-idle",n.HOLD_WALK="hold-walk",n.AIM="aim"})(v||(v={}));var Ue;(function(n){n[n.EQUIPPED=0]="EQUIPPED",n[n.INVENTORY=1]="INVENTORY"})(Ue||(Ue={}));const St=5126216;class Me extends l.GameObjects.Sprite{constructor(e,t,s,i,o){super(e,t!=null?t:0,s!=null?s:0,i||"playerOnly-4",o);a(this,"stateMachine");a(this,"playerMovement");a(this,"playerKeyboard");a(this,"playerAnims");a(this,"playerHold");a(this,"playerAimComp");a(this,"playerPSD");a(this,"flipSwitch",!1);a(this,"direction");a(this,"mudcolor",St);const r=new T(this);r.width=28,r.height=28,r.offsetX=18,r.offsetY=26;const h=new B(this);h.speed=155,new X(this),new W(this),new Pe(this),new mt(this),new Ge(this);const c=new Fe(this);c.facingDir=2,c.movingDir=2,new He(this),new q(this),this.stateMachine=new V(this,"player"),this.stateMachine.addState(v.IDLE,{onEnter:this.onIdleEnter}).addState(v.WALK,{onEnter:this.onWalkEnter,onUpdate:this.onWalkUpdate,onExit:this.onWalkExit}).addState(v.HOLD_IDLE,{onEnter:this.onHoldIdleEnter}).addState(v.HOLD_WALK,{onEnter:this.onHoldWalkEnter,onUpdate:this.onHoldWalkUpdate,onExit:this.onHoldWalkExit}).addState(v.AIM,{onEnter:this.onAimEnter}),this.scene.events.once(l.Scenes.Events.UPDATE,this.start,this),this.scene.events.on(l.Scenes.Events.UPDATE,this.Update,this),this.direction=p.FRONT,this.playerMovement=B.getComponent(this),this.playerAnims=Pe.getComponent(this),this.playerHold=Ge.getComponent(this),this.playerAimComp=Fe.getComponent(this),this.playerKeyboard=X.getComponent(this),this.playerPSD=He.getComponent(this)}start(){this.stateMachine.setState(v.IDLE),this.playerHold.stateMachine.setState(b.EMPTY),this.playerAimComp.stateMachine.setState(O.EMPTY);const e=this.body;e.pushable=!1,this.handleStateSwitching(),this.handleShooting(),this.handlePSDDeploy()}Update(e){this.stateMachine.update(e),this.playerHold.stateMachine.update(e),this.playerAimComp.stateMachine.update(e),this.playerPSD.stateMachine.update(e),q.getComponent(this).setDir(this.direction)}onWalkEnter(){d.emit(m.PLAYER_FOOT)}onWalkExit(){d.emit(m.PLAYER_FOOT_STOP)}setPSDCompState(e){this.playerPSD.stateMachine.setState(e)}inMudCondition(){console.log("in mud con"),this.tint=6636321;const e=B.getComponent(this);e.speed=155*.5}outMudCondition(){this.clearTint();const e=B.getComponent(this);e.speed=155}handlePSDDeploy(){this.playerKeyboard.executeCKeyJustDown=()=>{if(this.playerPSD.stateMachine.isCurrentState(P.DEPLOY)){this.scene.events.emit("takeback-PSD");return}this.playerPSD.stateMachine.setState(P.DEPLOY),this.once("player-recover-psd",()=>{this.playerPSD.stateMachine.setState(P.EQIUP_IDLE)},this)}}onHoldWalkEnter(){d.emit(m.PLAYER_FOOT)}onHoldWalkExit(){d.emit(m.PLAYER_FOOT_STOP)}handleShooting(){this.playerKeyboard.executeXKeyDown=()=>{this.playerHold.stateMachine.isCurrentState(b.EMPTY)||this.scene.events.emit("create-bullet",this.direction)}}onAimEnter(){this.playerAimComp.setFacingDir(this.direction)}handleStateSwitching(){this.playerKeyboard.executeShiftArrowKeyUp=()=>{this.enterAimState()},this.playerKeyboard.executeShiftLeft=()=>{this.handleAimStateMovement(p.LEFT)},this.playerKeyboard.executeShiftRight=()=>{this.handleAimStateMovement(p.RIGHT)},this.playerKeyboard.executeShiftUp=()=>{this.handleAimStateMovement(p.BACK)},this.playerKeyboard.executeShiftDown=()=>{this.handleAimStateMovement(p.FRONT)},this.playerKeyboard.executeShiftJustUp=()=>{this.playerHold.stateMachine.isCurrentState(b.EMPTY)||(this.playerAimComp.stateMachine.setState(O.EMPTY),this.playerHold.stateMachine.setState(b.IDLE),this.stateMachine.setState(v.HOLD_IDLE),this.playerPSD.stateMachine.isCurrentState(P.DEPLOY)||(this.playerPSD.setAimState(!1),this.playerPSD.stateMachine.setState(P.EQIUP_IDLE)),this.playerPSD.setAimState(!1),this.playerPSD.stateMachine.setState(P.EQIUP_IDLE))},this.playerKeyboard.executeLeft=()=>{this.handleNonEmptyHoldState(p.LEFT)},this.playerKeyboard.executeRight=()=>{this.handleNonEmptyHoldState(p.RIGHT)},this.playerKeyboard.executeUp=()=>{this.handleNonEmptyHoldState(p.BACK)},this.playerKeyboard.executeDown=()=>{this.handleNonEmptyHoldState(p.FRONT)},this.playerKeyboard.executeKeyUp=()=>{this.stateMachine.isCurrentState(v.WALK)?(this.stateMachine.setState(v.IDLE),this.playerHold.stateMachine.setState(b.EMPTY)):this.stateMachine.isCurrentState(v.HOLD_WALK)&&(this.stateMachine.setState(v.HOLD_IDLE),this.playerHold.stateMachine.setState(b.IDLE)),this.playerPSD.stateMachine.isCurrentState(P.DEPLOY)||(this.playerPSD.setFacingDir(this.direction),this.playerPSD.stateMachine.setState(P.EQIUP_IDLE))},this.playerKeyboard.executeSpace=()=>{if(this.stateMachine.isCurrentState(v.WALK)||this.stateMachine.isCurrentState(v.HOLD_WALK)){console.error("space toggling for gun mode is disabled during walk state");return}if(!this.flipSwitch){d.emit(m.LASERGUN_EQUIP),this.updateHoldDir(),this.playerHold.stateMachine.setState(b.IDLE),this.stateMachine.setState(v.HOLD_IDLE),this.playerPSD.setHoldState(!0),this.flipSwitch=!this.flipSwitch;return}d.emit(m.LASERGUN_EQUIP),this.playerHold.stateMachine.setState(b.EMPTY),this.stateMachine.setState(v.IDLE),this.playerPSD.setHoldState(!1),this.flipSwitch=!this.flipSwitch}}handleNonEmptyHoldState(e){if(this.direction=e,this.playerHold.stateMachine.isCurrentState(b.EMPTY)){this.stateMachine.setState(v.WALK),this.playerPSD.stateMachine.isCurrentState(P.DEPLOY)||(this.playerPSD.setFacingDir(e),this.playerPSD.stateMachine.setState(P.EQUIP_WALK));return}this.stateMachine.setState(v.HOLD_WALK),this.playerHold.stateMachine.setState(b.WALK),this.playerPSD.stateMachine.isCurrentState(P.DEPLOY)||(this.playerPSD.setFacingDir(e),this.playerPSD.stateMachine.setState(P.EQUIP_WALK))}handleAimStateMovement(e){this.playerHold.stateMachine.isCurrentState(b.EMPTY)||this.playerAimComp.stateMachine.isCurrentState(O.EMPTY)||(this.playerAimComp.setFacingDir(this.direction),this.playerAimComp.setMovingDir(e),this.playerAimComp.stateMachine.setState(O.WALK),this.playerHold.direction=this.direction,this.playerHold.stateMachine.setState(b.WALK),this.playerPSD.setFacingDir(this.direction),this.playerPSD.setAimState(!0),this.playerPSD.stateMachine.setState(P.EQUIP_WALK),this.direction%2!=e%2&&this.handleAimModeAnims(!0))}handleAimModeAnims(e){const t=M(this.direction);!t||(e?this.playerAnims.playAnims({character:"player",direction:t,state:"walk",holdState:"hold"}):this.playerAnims.playAnims({character:"player",direction:t,state:"idle",holdState:"hold"}))}enterAimState(){this.playerHold.stateMachine.isCurrentState(b.EMPTY)||this.stateMachine.isCurrentState(v.HOLD_WALK)||(this.playerPSD.setAimState(!0),this.playerAimComp.stateMachine.setState(O.STAY),this.playerHold.stateMachine.setState(b.IDLE),this.handleAimModeAnims(!1))}updateHoldDir(){this.playerHold.direction=this.direction}onHoldWalkUpdate(){const e=M(this.direction);if(!e){console.warn("direction should be defined");return}this.handlePlayerMovement(),this.updateHoldDir(),this.playerAnims.playAnims({character:"player",direction:e,state:"walk",holdState:"hold"})}onHoldIdleEnter(){const e=M(this.direction);if(!e){console.warn("direction should be defined");return}this.updateHoldDir(),this.playerMovement.stayStill(),this.playerAnims.playAnims({character:"player",direction:e,state:"idle",holdState:"hold"})}onIdleEnter(){const e=M(this.direction);if(!e){console.warn("direction should be defined");return}this.playerMovement.stayStill(),this.playerAnims.playAnims({character:"player",direction:e,state:"idle"})}handlePlayerMovement(){switch(this.direction){case p.BACK:{this.playerMovement.moveUp();break}case p.FRONT:{this.playerMovement.moveDown();break}case p.LEFT:{this.playerMovement.moveLeft();break}case p.RIGHT:{this.playerMovement.moveRight();break}}}onWalkUpdate(){const e=M(this.direction);if(!e){console.warn("direction should be defined");return}this.handlePlayerMovement(),this.playerAnims.playAnims({character:"player",direction:e,state:"walk"})}}var Ke;(function(n){n[n.IDLE=0]="IDLE",n[n.DAMAGED=1]="DAMAGED"})(Ke||(Ke={}));class xe extends l.GameObjects.Container{constructor(e,t,s){super(e,t!=null?t:-16,s!=null?s:-16);a(this,"top_left");a(this,"top_right");a(this,"bot_left");a(this,"bot_right");a(this,"top");a(this,"left");a(this,"right");a(this,"bot");a(this,"status",[{lv:1,hitPoint:30},{lv:2,hitPoint:70}]);a(this,"currLv",1);a(this,"currHP",30);const i=e.add.image(-16,-16,"PSDField",5);this.add(i);const o=e.add.image(48,-16,"PSDField",6);this.add(o);const r=e.add.image(-16,48,"PSDField",9);this.add(r);const h=e.add.image(48,48,"PSDField",10);this.add(h);const c=e.add.image(16,-16,"PSDField",1);this.add(c);const f=e.add.image(-16,16,"PSDField",4);this.add(f);const C=e.add.image(48,16,"PSDField",7);this.add(C);const E=e.add.image(16,48,"PSDField",13);this.add(E),new T(i),new T(o),new T(r),new T(h),new T(c),new T(f),new T(C),new T(E),this.top_left=i,this.top_right=o,this.bot_left=r,this.bot_right=h,this.top=c,this.left=f,this.right=C,this.bot=E,e.add.existing(this),this.scene.events.once(l.Scenes.Events.UPDATE,this.start,this),this.scene.events.on(l.Scenes.Events.UPDATE,this.update,this),this.state=0}start(){[this.top,this.left,this.right,this.bot,this.top_left,this.top_right,this.bot_left,this.bot_right].forEach(t=>t.setVisible(!1))}update(){this.checkZeroHealth()}clearField(){this.removeAll(!0)}checkZeroHealth(){this.currHP>0||this.clearField()}setProps(e){e<2&&e>0?(this.currHP=this.status[0].hitPoint,this.currLv=this.status[0].lv):(this.currHP=this.status[1].hitPoint,this.currLv=this.status[1].lv)}damage(e){this.state!==1&&(this.currHP=l.Math.Clamp(this.currHP-e,0,70),u.changeEnergyBy(-e),this.state=1,this.scene.time.delayedCall(500,()=>{this.state=0}))}makeNextLevel(e){this.setProps(e);const{scene:t}=this,s=e*2+1,i="PSDField";this.removeAll();for(let o=0;o<s;o++)for(let r=0;r<s;r++){let h=-1;if(o===0?r===0?h=0:r===s-1?h=12:h=4:o===s-1?r===0?h=3:r===s-1?h=15:h=7:r===0?h=1:r===s-1&&(h=13),h<0)continue;const c=t.physics.add.image(-32*(e-.5)+o*32,-32*(e-.5)+r*32,i,h);c.setPushable(!1),this.add(c)}t.add.existing(this),this.scene.events.emit("gen-psd-field")}}var L;(function(n){n.BACKPACK="backpack",n.DEPLOY="deploy"})(L||(L={}));class Ie extends l.GameObjects.Sprite{constructor(e,t,s,i,o){super(e,t!=null?t:0,s!=null?s:0,i||"raw-break-interact",o!=null?o:68);a(this,"HP",100);a(this,"energy",100);a(this,"stateMachine");a(this,"innerField");a(this,"outerField");this.name="PSD";const r=new T(this);r.static=!0,this.stateMachine=new V(this,"psd"),this.stateMachine.addState(L.BACKPACK,{onEnter:this.onBackpackEnter}).addState(L.DEPLOY,{onEnter:this.onDeployEnter}).setState(L.BACKPACK)}deploy(){this.stateMachine.setState(L.DEPLOY)}returnToPlayer(){this.stateMachine.setState(L.BACKPACK)}onBackpackEnter(){u.setPSDDeploy(!1),d.emit(m.DEPLOY),this.once(l.Animations.Events.ANIMATION_COMPLETE,this.despawn,this),this.playReverse("psd-deploy",!0),this.clearAllField()}onDeployEnter(){u.setPSDDeploy(!0),d.emit(m.DEPLOY),this.spawn(this.x,this.y).play("psd-deploy",!0),this.generateField()}clearAllField(){var e,t;(e=this.innerField)==null||e.clearField(),(t=this.outerField)==null||t.clearField()}generateField(){if(u.energy<10)console.error("you dont have energy for PSD");else if(u.energy<70){console.error("can only deploy inner field"),d.emit(m.FIELD_START),this.innerField=new xe(this.scene,this.x-16,this.y-16),this.innerField.makeNextLevel(1);return}else d.emit(m.FIELD_START),this.innerField=new xe(this.scene,this.x-16,this.y-16),this.innerField.makeNextLevel(1),this.outerField=new xe(this.scene,this.x-16,this.y-16),this.outerField.makeNextLevel(3)}spawn(e,t){this.setActive(!0),this.setVisible(!0),this.setPosition(e,t,2e3);const s=this.body;return s.enable=!0,this.scene.physics.world.add(s),this}despawn(){this.setActive(!1),this.setVisible(!1),this.setPosition(-500,-500,-2e3);const e=this.body;!e||(e.enable=!1,this.scene.physics.world.remove(e))}}var k;(function(n){n[n.EMPTY=0]="EMPTY",n[n.COPPER=1]="COPPER",n[n.SILVER=2]="SILVER",n[n.GOLD=3]="GOLD"})(k||(k={}));class g extends l.GameObjects.Sprite{constructor(e,t,s,i,o){super(e,t!=null?t:0,s!=null?s:0,i||"raw-break-interact",o!=null?o:0);a(this,"isPickable",!1);a(this,"rawType",0);a(this,"maxHP",{empty:4,copper:4,silver:8,gold:10});a(this,"limit",{copper:[3,2,1],silver:[6,4,2],gold:[7,4,1]});a(this,"healMet",{copper:{addHealth:1,addEnergy:1,addSanity:1},silver:{addHealth:3,addEnergy:3,addSanity:3},gold:{addHealth:5,addEnergy:5,addSanity:5}});a(this,"currHP",0);const r=new T(this);r.static=!0,new W(this),this.scene.events.once(l.Scenes.Events.UPDATE,this.start,this)}start(){this.initRock()}initRock(){this.setCurrHP(this.rawType),this.startRockAnims()}startRockAnims(){switch(this.rawType){case k.EMPTY:{this.play("empty-break",!0),this.anims.stop();break}case k.COPPER:{this.play("copper-break",!0),this.anims.stop();break}case k.SILVER:{this.play("silver-break",!0),this.anims.stop();break}case k.GOLD:{this.play("gold-break",!0),this.anims.stop();break}}}beingPickedUp(){switch(this.rawType){case k.COPPER:{u.changeHealthBy(this.healMet.copper.addHealth),u.changeEnergyBy(this.healMet.copper.addEnergy),u.changeSanityBy(this.healMet.copper.addSanity);break}case k.SILVER:{u.changeHealthBy(this.healMet.silver.addHealth),u.changeEnergyBy(this.healMet.silver.addEnergy),u.changeSanityBy(this.healMet.silver.addSanity);break}case k.GOLD:{u.changeHealthBy(this.healMet.gold.addHealth),u.changeEnergyBy(this.healMet.gold.addEnergy),u.changeSanityBy(this.healMet.gold.addSanity);break}}this.destroy()}setCurrHP(e){switch(e){case k.EMPTY:{this.currHP=this.maxHP.empty;break}case k.COPPER:{this.currHP=this.maxHP.copper;break}case k.SILVER:{this.currHP=this.maxHP.silver;break}case k.GOLD:{this.currHP=this.maxHP.gold;break}default:{console.error("no such type exist");break}}}damage(e){this.currHP=l.Math.Clamp(this.currHP-e,-1,9),this.updateRockState()}setRawType(e){e<0||e>3||(this.rawType=e)}switchFrame(e,t){if(this.currHP===e-1*t)this.anims.nextFrame();else if(this.currHP===e-2*t)this.anims.nextFrame();else if(this.currHP===e-3*t)this.anims.nextFrame();else if(this.currHP===0)this.anims.nextFrame(),this.updatePickableState();else return}updatePickableState(){switch(this.rawType){case k.COPPER:{this.checkPickIfZeroHP();break}case k.SILVER:{this.checkPickIfZeroHP();break}case k.GOLD:{this.checkPickIfZeroHP();break}}}checkPickIfZeroHP(){this.currHP<1&&(this.isPickable=!0)}updateRockState(){switch(this.rawType){case k.EMPTY:{this.switchFrame(this.maxHP.empty,1);break}case k.COPPER:{this.switchFrame(this.maxHP.copper,1);break}case k.SILVER:{this.switchFrame(this.maxHP.silver,2);break}case k.GOLD:{this.switchFrame(this.maxHP.gold,3);break}default:{console.error("no such type exist");break}}}}class x extends _{constructor(e){super(e);a(this,"gameObject");a(this,"target");a(this,"range",35);a(this,"deadRangeX",15);a(this,"deadRangeY",60);a(this,"active",!0);this.gameObject=e,e.__FollowTarget=this}static getComponent(e){return e.__FollowTarget}update(){!this.active||!this.checkRequireComps()||!this.checkWithinRange()||this.moveToTarget()}deactivate(){this.active=!1}activate(){this.active=!0}moveToTarget(){const e=this.target.x-this.gameObject.x,t=this.target.y-this.gameObject.y;e>this.deadRangeX?this.gameObject.emit("move",p.RIGHT):e<-this.deadRangeX?this.gameObject.emit("move",p.LEFT):t>this.deadRangeY?this.gameObject.emit("move",p.FRONT):t<-this.deadRangeY?this.gameObject.emit("move",p.BACK):this.gameObject.emit("attack")}checkRequireComps(){return B.getComponent(this.gameObject)?!0:(console.warn("FollowTarget needs JustMovement comp in order to function"),!1)}setTarget(e){this.target=e}checkWithinRange(){return!this.target||!this.gameObject?void 0:l.Math.Distance.BetweenPoints(this.gameObject,this.target)<=this.range}}var D;(function(n){n.IDLE="idle",n.WALK="walk",n.ATTACK="attack"})(D||(D={}));class ve extends l.GameObjects.Sprite{constructor(e,t,s,i,o){super(e,t!=null?t:0,s!=null?s:0,i||"swarm-back-walk-1",o);a(this,"HP",100);a(this,"attack",2);a(this,"stateMachine");a(this,"enemyAnimation");a(this,"enemyMovement");a(this,"direction",p.BACK);const r=new T(this);r.width=20,r.height=28,r.offsetX=22,r.offsetY=26,new W(this),new Pe(this);const h=new B(this);h.speed=90;const c=new x(this);c.range=300,c.deadRangeX=20,e.events.on(l.Scenes.Events.UPDATE,this.update,this),this.enemyAnimation=Pe.getComponent(this),this.enemyMovement=B.getComponent(this),this.enemyAnimation.playAnims({character:"swarm",direction:"front",state:"idle"}),this.stateMachine=new V(this,"enemy"),this.stateMachine.addState(D.IDLE,{onEnter:this.onIdleEnter}).addState(D.WALK,{onEnter:this.onWalkEnter,onUpdate:this.onWalkUpdate,onExit:this.onWalkExit}).addState(D.ATTACK,{onEnter:this.onAttackEnter}).setState(D.IDLE),this.direction=p.BACK,this.scene.events.once(l.Scenes.Events.UPDATE,this.start,this),this.on("move",this.moveTheUnit),this.on("stay-still",this.stayStill)}start(){this.setEnemyPush(!1)}startMovement(){this.direction=p.BACK,this.stateMachine.setState(D.WALK)}setEnemyPush(e){const t=this.body;!t||(t.pushable=e)}update(e){this.stateMachine.update(e),this.y<-1e3&&this.destoryAndDetach()}enrage(){this.stateMachine.setState(D.ATTACK)}checkState(e){return this.stateMachine.isCurrentState(e)}stayStill(){this.stateMachine.setState(D.IDLE)}moveTheUnit(e){this.direction=e,this.stateMachine.setState(D.WALK)}onIdleEnter(){const e=M(this.direction);if(!e){console.warn("direction should be defined");return}this.enemyMovement.stayStill(),this.enemyAnimation.playAnims({character:"swarm",direction:e,state:"idle"})}onWalkEnter(){d.emit(m.ENEMY_FOOT);const e=M(this.direction);if(!e){console.warn("direction should be defined");return}if(!this.enemyAnimation){console.error("animation comp is undefined");return}this.enemyAnimation.playAnims({character:"swarm",direction:e,state:"walk"})}onWalkExit(){d.emit(m.ENEMY_FOOT_STOP)}onWalkUpdate(){if(!this.enemyMovement){console.error("movement comp is undefined");return}switch(this.direction){case p.BACK:{this.enemyMovement.moveUp();break}case p.FRONT:{this.enemyMovement.moveDown();break}case p.LEFT:{this.enemyMovement.moveLeft();break}case p.RIGHT:{this.enemyMovement.moveRight();break}}}onAttackEnter(){const e=M(this.direction);if(!e){console.warn("direction should be defined");return}this.enemyMovement.stayStill(),this.enemyAnimation.playAnims({character:"swarm",direction:e,state:"attack"});const t=()=>{this.off(l.Animations.Events.ANIMATION_UPDATE,t)};this.on(l.Animations.Events.ANIMATION_UPDATE,t)}setSMState(e){this.stateMachine.setState(e)}spawn(e,t){this.setActive(!0),this.setVisible(!0),this.setPosition(e,t,2e3),this.scene.physics.add.existing(this);const s=this.body;return s.enable=!0,this.scene.physics.world.add(s),this}despawn(){this.stayStill(),this.setActive(!1),this.setVisible(!1),this.setPosition(-1e3,-500,-2e3);const e=this.body;!e||(e.enable=!1,this.scene.physics.world.remove(e))}destoryAndDetach(){this.destroy()}damage(e){this.HP=l.Math.Clamp(this.HP-e,0,200)}heal(e){this.HP=l.Math.Clamp(this.HP+e,0,200)}}class Ye extends l.GameObjects.Sprite{constructor(e,t,s,i,o){super(e,t!=null?t:0,s!=null?s:0,i||"PCProjectile32",o!=null?o:0);a(this,"life",0);a(this,"maxlife",2e3);const r=new T(this);r.width=16,r.height=16,r.offsetX=8,r.offsetY=8;const h=new B(this);h.speed=380,this.life=this.maxlife}fire(e,t){this.setActive(!0),this.setVisible(!0),this.setPosition(e,t,2e3),this.scene.physics.add.existing(this);const s=this.body;s.enable=!0,this.scene.physics.world.add(s)}despawn(){this.setActive(!1),this.setVisible(!1);const e=this.body;!e||(e.enable=!1,this.scene.physics.world.remove(e),this.resetLife())}resetLife(){this.life=this.maxlife}update(e,t){this.life-=t,(this.y<-1e3||this.life<0)&&this.despawn()}}var J;class wt extends l.Scene{constructor(){super("Level");a(this,"floor_1");a(this,"wall_1");a(this,"player");a(this,"pSDRobot");a(this,"start_level");a(this,"rock_1");a(this,"rock");a(this,"rock_5");a(this,"rock_9");a(this,"rock_10");a(this,"rock_14");a(this,"rock_15");a(this,"rock_19");a(this,"rock_21");a(this,"rock_22");a(this,"rock_27");a(this,"exitZone");a(this,"obstacles");a(this,"mudList");a(this,"platformer_fun");a(this,"cave_test_map_2");a(this,"cave_test_map_1");a(this,"bulletGroup");a(this,"enemyGroup");a(this,"lastfired",0);Ce(this,J,void 0);a(this,"gamePlayTrack");a(this,"deployPSDTrack");a(this,"fieldStartTrack");a(this,"fieldLoopTrack");a(this,"fieldFadeTrack");a(this,"collectMineral")}editorCreate(){const e=this.add.tilemap("cave-test-map-2");e.addTilesetImage("gamedevjs-cave-tileset-1","cave-test-tileset-1");const t=this.add.image(160,-976,"EndTunnel - Wide"),s=e.createLayer("floor",["gamedevjs-cave-tileset-1"],0,-960),i=e.createLayer("wall",["gamedevjs-cave-tileset-1"],0,-960),o=new Me(this,160,160);this.add.existing(o);const r=new Ie(this,-200,0);this.add.existing(r);const h=this.add.sprite(144,160,"Start-Level-Anim-Short-20"),c=new g(this,80,32);this.add.existing(c);const f=new g(this,176,32);this.add.existing(f);const C=new g(this,144,0);this.add.existing(C);const E=new g(this,112,32);this.add.existing(E);const R=new g(this,208,0);this.add.existing(R);const F=new g(this,80,-32);this.add.existing(F);const Se=new g(this,208,-80);this.add.existing(Se);const $=new g(this,112,-80);this.add.existing($);const Z=new g(this,144,-32);this.add.existing(Z);const H=new g(this,176,-112);this.add.existing(H);const U=new g(this,80,-192);this.add.existing(U);const z=new g(this,208,-160);this.add.existing(z);const ee=new g(this,112,-144);this.add.existing(ee);const te=new g(this,144,-176);this.add.existing(te);const K=new g(this,176,-224);this.add.existing(K);const I=new g(this,80,-272);this.add.existing(I);const we=new g(this,208,-368);this.add.existing(we);const se=new g(this,112,-320);this.add.existing(se);const ie=new g(this,144,-368);this.add.existing(ie);const Y=new g(this,176,-304);this.add.existing(Y);const ne=new g(this,176,-400);this.add.existing(ne);const j=new g(this,80,-592);this.add.existing(j);const ae=new g(this,80,-384);this.add.existing(ae);const oe=new g(this,112,-432);this.add.existing(oe);const re=new g(this,80,-464);this.add.existing(re);const he=new g(this,144,-480);this.add.existing(he);const N=new g(this,176,-448);this.add.existing(N);const le=new g(this,144,-544);this.add.existing(le);const ce=new g(this,208,-480);this.add.existing(ce);const de=new g(this,208,-512);this.add.existing(de);const fe=new g(this,80,-544);this.add.existing(fe);const ue=new g(this,112,-560);this.add.existing(ue);const pe=new g(this,176,-560);this.add.existing(pe);const me=new g(this,208,-544);this.add.existing(me);const _e=new g(this,112,-512);this.add.existing(_e);const Te=new g(this,112,-592);this.add.existing(Te);const Ee=new g(this,144,-592);this.add.existing(Ee);const Be=new g(this,176,-592);this.add.existing(Be);const Oe=new g(this,208,-592);this.add.existing(Oe);const be=this.add.rectangle(64,-992,192,32);be.setOrigin(0,1),be.alpha=.1,be.isFilled=!0;const st=[Oe,Be,Ee,Te,_e,me,pe,ue,fe,de,ce,le,N,he,re,oe,ae,j,ne,Y,ie,se,we,I,K,te,ee,z,U,H,Z,$,Se,F,R,E,C,f,c],it=[];new W(t),new pt(i),f.rawType=2,C.rawType=2,E.rawType=1,F.rawType=1,$.rawType=2,Z.rawType=2,H.rawType=3,U.rawType=2,z.rawType=2,ee.rawType=1,te.rawType=2,K.rawType=2,I.rawType=2,se.rawType=2,ie.rawType=2,Y.rawType=1,ne.rawType=2,j.rawType=1,oe.rawType=2,re.rawType=2,he.rawType=2,N.rawType=1,le.rawType=1,ce.rawType=2,de.rawType=2,ue.rawType=2,pe.rawType=1,me.rawType=2,_e.rawType=1,Te.rawType=1,Ee.rawType=1,Be.rawType=2,this.floor_1=s,this.wall_1=i,this.player=o,this.pSDRobot=r,this.start_level=h,this.rock_1=c,this.rock=f,this.rock_5=F,this.rock_9=H,this.rock_10=U,this.rock_14=K,this.rock_15=I,this.rock_19=Y,this.rock_21=j,this.rock_22=ae,this.rock_27=N,this.exitZone=be,this.cave_test_map_2=e,this.obstacles=st,this.mudList=it,this.events.emit("scene-awake")}create(){this.editorCreate(),this.exitZone.setDepth(-1e3),d.emit(S.UPDATE_ACTIVE,"Level"),d.emit(m.GAMEPLAY),this.player.play("player-front-idle"),this.floor_1.depth=this.wall_1.y*2,this.wall_1.depth=this.wall_1.y*2,this.initObjectPool(),this.physics.add.collider(this.player,this.wall_1),this.physics.add.collider(this.player,this.enemyGroup,this.handlePlayerSwarm,void 0,this),this.physics.add.collider(this.enemyGroup),this.physics.add.collider(this.enemyGroup,this.wall_1),this.physics.add.collider(this.enemyGroup,this.obstacles),this.physics.add.overlap(this.bulletGroup,this.enemyGroup,this.handleBulletSwarm,void 0,this),this.physics.add.collider(this.bulletGroup,this.wall_1,this.handleBulletWallCollision,void 0,this),this.physics.add.collider(this.bulletGroup,this.obstacles,this.handleBulletRocks,this.checkBulletRocks),this.physics.add.collider(this.player,this.obstacles,this.handlePlayerRocks),this.physics.add.existing(this.exitZone,!0),this.physics.add.collider(this.player,this.exitZone,this.goToChunks),De(this,J,q.getComponent(this.player)),this.events.on("create-bullet",this.handleBulletUpdate,this),this.events.on("deploy-PSD",this.deployPSD,this),this.events.on("takeback-PSD",this.takeBackPSD,this),this.events.on("gen-psd-field",this.addColliderEnemyField,this),this.start_level.once("animationcomplete",()=>{this.events.once("resume",this.onStartLevelAnimsComplete,this),d.emit(S.TO_EXPLAINER)},this),this.player.setVisible(!1),this.playStartLevelAnims()}update(e,t){this.handleDepthSort(),this.checkForGameOver()}checkForGameOver(){(u.hp<1||u.sanity<1)&&(this.sound.stopAll(),d.emit(S.GO_GAMEOVER,"Level"))}handlePlayerMud(e,t){!!e.body}getCollidingBlocks(){return{wall:this.wall_1,rocks:this.obstacles,group:this.enemyGroup}}goToChunks(){d.emit(S.GO_YOUSURVIVED,"Level")}RocksPropagator(e,t,s){const i=32,o=32;for(let r=0;r<6;r++)for(let h=0;h<s;h++)h%2==0&&r%2==0?this.createRock(e+i*r,t-o*h):h%2==1&&r%2==1&&this.createRock(e+i*r,t-o*h)}createRock(e,t){const s=new g(this,e,t);this.add.existing(s),s.rawType=l.Math.Between(1,3),s.setCurrHP(s.rawType),s.startRockAnims(),this.obstacles.push(s)}handlePlayerRocks(e,t){const s=t;!s.isPickable||(d.emit(m.COLLECT),s.beingPickedUp())}checkBulletRocks(e,t){return!t.isPickable}handleBulletRocks(e,t){const s=e,i=t;s.despawn(),d.emit(m.TARGET_HIT),i.damage(1)}SwarmGenerator(e,t,s,i,o=0){return this.time.addEvent({repeat:s,delay:i,startAt:o,callback:this.createSingleSwarm,callbackScope:this,args:[e,t]})}handlePlayerSwarm(e,t){const s=t;u.changeHealthBy(-5),d.emit(m.TARGET_HIT),s.despawn()}createSingleSwarm(e,t){const s=this.enemyGroup.get(e,t);if(!s)return;s.setActive(!0).setVisible(!0),this.physics.add.existing(s),s.startMovement(),x.getComponent(s).setTarget(this.player);const i=x.getComponent(s);!i||(i.setTarget(this.player),i.range=300,i.deadRangeX=20)}addColliderEnemyField(){!this.pSDRobot.outerField||!this.pSDRobot.innerField||(this.physics.add.collider(this.enemyGroup,this.pSDRobot.outerField.getAll(),this.handleEnemyFieldCollides,void 0,this),this.physics.add.collider(this.enemyGroup,this.pSDRobot.innerField.getAll(),this.handleEnemyFieldCollides,void 0,this))}handleEnemyFieldCollides(e,t){const s=e,i=t,o=i.parentContainer;x.getComponent(s).deactivate(),s.enrage();let h=5;const c=this.tweens.create({targets:s,duration:200,onStart:()=>{s.setSMState(D.IDLE),s.body.setVelocity(h)},onComplete:()=>{s.setSMState(D.WALK)}});o.damage(s.attack),this.time.delayedCall(500,()=>{i.y<s.y?(h=4,c.play()):i.y>s.y&&(h=-4,c.play())})}enrageEnemy(e,t){const s=e;x.getComponent(s).deactivate(),s.enrage()}onStartLevelAnimsComplete(){this.player&&this.player.setVisible(!0);const e=X.getComponent(this.player);!e||(e.setActive(!0),this.SwarmGenerator(80,384,20,4e3,0),this.SwarmGenerator(128,384,20,4e3,2500),this.SwarmGenerator(176,384,20,4e3,1500),this.SwarmGenerator(224,384,20,4e3,500),this.RocksPropagator(80,-624,9))}handleBulletSwarm(e,t){const s=e,i=t;s.despawn(),d.emit(m.TARGET_HIT),i.emit("stay-still"),i.despawn()}playStartLevelAnims(){this.player.setVisible(!1),this.start_level.play("start-level-short")}deployPSD(){const e=q.getComponent(this.player);if(!e){console.error("selection square is undefined");return}const{x:t,y:s}=e.getSelectionSquare();if(this.cave_test_map_2.hasTileAtWorldXY(t,s,this.cameras.main,this.wall_1)){this.player.setPSDCompState(P.EQIUP_IDLE);return}d.emit(m.DEPLOY),this.pSDRobot.spawn(t,s),this.pSDRobot.deploy()}takeBackPSD(){!this.checkSelectionPSDOverlap()||(this.pSDRobot.returnToPlayer(),this.player.emit("player-recover-psd"))}checkSelectionPSDOverlap(){if(!ye(this,J)){console.error("selection square is undefined");return}const e=ye(this,J).getSelectionSquare().getBounds(),t=this.pSDRobot.getBounds();return l.Geom.Intersects.RectangleToRectangle(e,t)}handleBulletUpdate(e){const t=this.bulletGroup.get(),s=500;t&&this.time.now>this.lastfired&&(d.emit(m.LASERGUN),t.fire(this.player.x,this.player.y),this.setBulletRotationAndVel(t,e),this.lastfired=this.time.now+s)}initObjectPool(){this.bulletGroup=this.add.group({classType:Ye,maxSize:50,runChildUpdate:!0}),this.enemyGroup=this.add.group({classType:ve,maxSize:100,runChildUpdate:!0})}handleBulletWallCollision(e,t){e.despawn()}setBulletRotationAndVel(e,t){const s=B.getComponent(e);if(!!s)switch(t){case p.LEFT:{e.angle=0,s.moveLeft();break}case p.RIGHT:{e.angle=180,s.moveRight();break}case p.BACK:{e.angle=90,s.moveUp();break}case p.FRONT:{e.angle=270,s.moveDown();break}}}handlePause(){this.scene.pause("Level"),this.scene.launch("Pause")}layerDebug(e){const t=this.add.graphics().setAlpha(.75);e.renderDebug(t,{tileColor:null,collidingTileColor:new l.Display.Color(243,134,48,255),faceColor:new l.Display.Color(40,39,37,255)})}handleDepthSort(){this.children.each(e=>{const t=e;!W.getComponent(t)||t.setDepth(t.y)})}}J=new WeakMap;class ft extends _{constructor(e){super(e);a(this,"gameObject");this.gameObject=e,e.__PreloadText=this,this.scene.load.on(l.Loader.Events.PROGRESS,t=>{this.gameObject.text=Math.floor(t*100)+"%"})}static getComponent(e){return e.__PreloadText}}class bt extends l.Scene{constructor(){super("Preload")}editorCreate(){const e=this.add.image(160,320,"guapen");e.scaleX=.5915891440784282,e.scaleY=.5915891440784282;const t=this.add.text(160,475,"",{});t.setOrigin(.5,.5),t.text="0%",t.setStyle({fontSize:"30px"});const s=this.add.image(239,231,"gamedevjs");s.scaleX=.5663740786333126,s.scaleY=.5663740786333126,new ft(t),this.events.emit("scene-awake")}preload(){this.editorCreate(),this.load.pack("asset-pack","assets/asset-pack.json"),this.load.pack("audio-asset-pack","assets/audio-asset-pack.json"),this.load.pack("ingame-menu","assets/ingame-menu-asset-pack.json"),this.load.pack("boss","assets/boss-asset-pack.json"),this.load.on(l.Loader.Events.COMPLETE,()=>this.scene.start("Bootstrap"))}}class w extends _{constructor(e){super(e);a(this,"gameObject");this.gameObject=e,e.__Button=this}static getComponent(e){return e.__Button}start(){this.gameObject.setInteractive(),this.gameObject.on("pointerup",this.handlePointerUp,this),this.gameObject.on("pointerdown",this.handlePointerDown,this),this.gameObject.on("pointerover",this.handlePointerOver,this),this.gameObject.on("pointerout",this.handlePointerOut,this)}handlePointerUp(){}handlePointerDown(){}handlePointerOver(){}handlePointerOut(){}}var je;(function(n){n[n.HEALTH=0]="HEALTH",n[n.ENERGY=1]="ENERGY",n[n.SANITY=2]="SANITY"})(je||(je={}));var Ne;(function(n){n[n.COPPER=0]="COPPER",n[n.SILVER=1]="SILVER",n[n.GOLD=2]="GOLD"})(Ne||(Ne={}));const Xe=[{X:22,Y:554.5},{X:58,Y:554.5},{X:94,Y:554.5},{X:22,Y:585.5},{X:58,Y:585.5},{X:94,Y:585.5},{X:22,Y:616.5},{X:58,Y:616.5},{X:94,Y:616.5}];class Pt extends l.Scene{constructor(){super("UI");a(this,"menu_Button");a(this,"bottom_Panel");a(this,"gunButton");a(this,"pSD_Button_Red");a(this,"sanityPoints");a(this,"energyPoints");a(this,"healthPoints");a(this,"redStatus");a(this,"itemList",[]);a(this,"testHealth",()=>{u.setHealth(u.hp-10>0?u.hp-10:100)});a(this,"testEnergy",()=>{u.setEnergy(u.energy-10>0?u.energy-10:100)});a(this,"testSanity",()=>{u.setSanity(u.sanity-10>0?u.sanity-10:100)});a(this,"testInventory",()=>{if(u.inventory.length>8){u.inventory.length=0;return}const e=u.inventory;e.push(l.Math.Between(0,2)),u.setInventory(e)})}editorCreate(){const e=this.add.image(288,32,"Menu Button"),t=this.add.sprite(160,584.5,"Bottom Pannel"),s=this.add.image(276,557,"Health Point"),i=this.add.image(270,557,"Health Point"),o=this.add.image(264,557,"Health Point"),r=this.add.image(258,557,"Health Point"),h=this.add.image(252,557,"Health Point"),c=this.add.image(246,557,"Health Point"),f=this.add.image(240,557,"Health Point"),C=this.add.image(234,557,"Health Point"),E=this.add.image(228,557,"Health Point"),R=this.add.image(222,557,"Health Point"),F=this.add.image(276,585,"Energy Point"),Se=this.add.image(270,585,"Energy Point"),$=this.add.image(264,585,"Energy Point"),Z=this.add.image(258,585,"Energy Point"),H=this.add.image(252,585,"Energy Point"),U=this.add.image(246,585,"Energy Point"),z=this.add.image(240,585,"Energy Point"),ee=this.add.image(234,585,"Energy Point"),te=this.add.image(228,585,"Energy Point"),K=this.add.image(222,585,"Energy Point"),I=this.add.image(276,613,"Sanity Point"),we=this.add.image(270,613,"Sanity Point"),se=this.add.image(264,613,"Sanity Point"),ie=this.add.image(258,613,"Sanity Point"),Y=this.add.image(252,613,"Sanity Point"),ne=this.add.image(246,613,"Sanity Point"),j=this.add.image(240,613,"Sanity Point"),ae=this.add.image(234,613,"Sanity Point"),oe=this.add.image(228,613,"Sanity Point"),re=this.add.image(222,613,"Sanity Point"),he=this.add.image(294,556.5,"Status Red Overlay"),N=this.add.image(294,584.5,"Status Red Overlay"),le=this.add.image(294,612.5,"Status Red Overlay"),ce=this.add.image(156,601,"GunButton");this.add.image(156,556,"PSDButton");const de=this.add.image(155,555,"PSD Button Red"),fe=[re,oe,ae,j,ne,Y,ie,se,we,I],ue=[K,te,ee,z,U,H,Z,$,Se,F],pe=[s,R,E,C,f,c,h,r,o,i],me=[le,N,he];new w(e),new X(t),this.menu_Button=e,this.bottom_Panel=t,this.gunButton=ce,this.pSD_Button_Red=de,this.sanityPoints=fe,this.energyPoints=ue,this.healthPoints=pe,this.redStatus=me,this.events.emit("scene-awake")}create(){this.editorCreate(),this.sanityPoints.sort((e,t)=>t.x-e.x),this.energyPoints.sort((e,t)=>t.x-e.x),this.healthPoints.sort((e,t)=>t.x-e.x),this.redStatus.sort((e,t)=>e.y-t.y),this.setMenuButtonResponse(),rt(()=>{this.showPoints(1),this.showPoints(0),this.showPoints(2),this.showInventory(),this.showRedStatus(1),this.showRedStatus(0),this.showRedStatus(2),this.showPSDStatus(),this.showGunStatus()})}testInputActive(){const e=X.getComponent(this.bottom_Panel);e.setActive(!0),e.executeWKeyJustDown=this.testInventory,e.executeAKeyJustDown=this.testHealth,e.executeSKeyJustDown=this.testEnergy,e.executeDKeyJustDown=this.testSanity}setMenuButtonResponse(){const e=w.getComponent(this.menu_Button);e.handlePointerOut=()=>{this.menu_Button.setTexture("Menu Button"),this.menu_Button.clearTint()},e.handlePointerOver=()=>{this.menu_Button.setTint(65535)},e.handlePointerDown=()=>{d.emit(m.MENUSELECT),this.menu_Button.setTexture("Menu Button Pressed")},e.handlePointerUp=()=>{this.menu_Button.setTexture("Menu Button"),d.emit(S.TO_PAUSE)}}showPSDStatus(){if(!u.isPSDDeployed){this.pSD_Button_Red.setVisible(!0);return}this.pSD_Button_Red.setVisible(!1)}showGunStatus(){if(!u.isGunDeployed){this.gunButton.setTexture("GunButton-off");return}this.gunButton.setTexture("GunButton")}showRedStatus(e){let t=u.energy,s=30;switch(e){case 1:{t=u.energy,s=30;break}case 0:{t=u.hp,s=30;break}case 2:{t=u.sanity,s=30;break}default:{console.error("no such type exists");return}}t<s?this.redStatus[e].setVisible(!0):this.redStatus[e].setVisible(!1)}showInventory(){this.itemList.forEach(e=>{e.destroy()}),u.inventory.forEach((e,t)=>{const s=this.getItemSpriteName(e);if(!s)return;const i=this.add.image(Xe[t].X,Xe[t].Y,s);this.itemList.push(i)})}getItemSpriteName(e){switch(e){case 0:return"copper item";case 1:return"silver item";case 2:return"gold item"}}showPoints(e){let t=0,s=[];switch(e){case 1:{t=Math.ceil(u.energy/10),s=this.energyPoints;break}case 0:{t=Math.ceil(u.hp/10),s=this.healthPoints;break}case 2:{t=Math.ceil(u.sanity/10),s=this.sanityPoints;break}default:console.error("such point type do not exist.")}s.forEach(i=>i.setVisible(!1));for(let i=0;i<t;i++)!s[i]||s[i].setVisible(!0)}}class vt extends l.Scene{constructor(){super("Title");a(this,"start_Anim1");a(this,"logo_v2");a(this,"start_Button");a(this,"transition");a(this,"endScale",1.2);a(this,"introTrack");a(this,"startAnimSFX")}editorCreate(){const e=this.add.sprite(160,320,"Start-Anim-1"),t=this.add.image(160,142,"Logo v2");t.scaleX=.7061279801116807,t.scaleY=.7061279801116807;const s=this.add.image(160,191,"Start Button"),o=[this.add.image(160,1024,"Dithered Triangles")];new w(s),this.start_Anim1=e,this.logo_v2=t,this.start_Button=s,this.transition=o,this.events.emit("scene-awake")}create(){this.editorCreate(),this.introTrack=this.sound.add("Ambient_Intro_Track_v3",{loop:!0}),this.startAnimSFX=this.sound.add("Start-Anim-SFX"),this.introTrack.play(),w.getComponent(this.start_Button).handlePointerUp=()=>{this.start_Button.setTexture("Start Button"),this.hideUIElement(),this.introTrack.stop()},w.getComponent(this.start_Button).handlePointerDown=()=>{d.emit(m.MENUSELECT),this.start_Button.setTexture("Start Button Pressed")},[this.start_Button].forEach(t=>{t.setData("idle",t.texture.key);const s=w.getComponent(t);s.handlePointerOver=()=>{this.scaleUp(t)},s.handlePointerOut=()=>{const i=t.getData("idle");t.setTexture(i),this.scaleDown(t)}}),this.events.once("element-finished-tween",this.startTitleAnims,this),this.events.once("shape-finished",()=>{this.time.delayedCall(500,this.startNewGame,void 0,this)},this),this.start_Anim1.once(l.Animations.Events.ANIMATION_COMPLETE,this.handleAnimsEnd,this),this.start_Anim1.play("start-anim-idle")}handleAnimsEnd(){this.transition.forEach(e=>{this.tweens.add({targets:e,duration:800,y:"-=728",onUpdate:()=>{this.start_Anim1.y-=2},onComplete:()=>{this.events.emit("shape-finished")}})})}startTitleAnims(){!this.start_Anim1||(this.start_Anim1.play("start-anim",!0),this.startAnimSFX.play())}scaleDown(e){const t=this.tweens.addCounter({from:this.endScale,to:1,duration:300,onUpdate:()=>{const s=t.getValue();e.setScale(s)}})}scaleUp(e){const t=this.tweens.addCounter({from:1,to:this.endScale,duration:300,onUpdate:()=>{const s=t.getValue();e.setScale(s)}})}hideUIElement(){[this.logo_v2,this.start_Button].forEach(t=>{const s=this.tweens.addCounter({duration:1e3,from:1,to:0,onUpdate:()=>{const i=s.getValue();t.setAlpha(i)}})}),this.events.emit("element-finished-tween")}startNewGame(){this.startAnimSFX.stop(),d.emit(S.TO_GAME)}}class A extends _{constructor(e){super(e);a(this,"gameObject");a(this,"endScale",1.2);this.gameObject=e,e.__ButtonScaleComp=this}static getComponent(e){return e.__ButtonScaleComp}scaleDown(){const e=this.scene.tweens.addCounter({from:this.endScale,to:1,duration:300,onUpdate:()=>{const t=e.getValue();this.gameObject.setScale(t)}})}scaleUp(){const e=this.scene.tweens.addCounter({from:1,to:this.endScale,duration:300,onUpdate:()=>{const t=e.getValue();this.gameObject.setScale(t)}})}}class kt extends l.Scene{constructor(){super("Pause");a(this,"slider_Up_Button_Music");a(this,"slider_Up_Button_SFX");a(this,"slider_Down_Button_Music");a(this,"slider_Down_Button_SFX");a(this,"mainMenuButton");a(this,"musicButton");a(this,"sFXButton");a(this,"resumeButton");a(this,"rulesButton");a(this,"newGameButton");a(this,"explainer")}editorCreate(){this.add.image(160,320,"70per-Black-BG");const e=this.add.image(160,320,"Pause_Menu_Ref");e.visible=!1,this.add.image(160,209,"Pause-Menu-BG"),this.add.image(188,292,"SliderBar"),this.add.image(116,292,"Slider-Down-Button-Selected"),this.add.image(260,292,"Slider-Up-Button-Selected"),this.add.image(188,292,"Slider-Button"),this.add.image(260,323,"Slider-Up-Button-Selected"),this.add.image(116,323,"Slider-Down-Button-Selected"),this.add.image(188,323,"SliderBar"),this.add.image(188,323,"Slider-Button");const t=this.add.image(260,292,"Slider-Up-Button"),s=this.add.image(260,323,"Slider-Up-Button"),i=this.add.image(116,292,"Slider-Down-Button"),o=this.add.image(116,323,"Slider-Down-Button"),r=this.add.image(90,181,"MainMenu-Button-Selected"),h=this.add.image(76,292,"Music-Button-Selected"),c=this.add.image(69,323,"SFX-Button-Selected"),f=this.add.image(83,121,"Resume-Button-Selected"),C=this.add.image(78,213,"Rules-Button-Selected"),E=this.add.image(88,151,"NewGame-Button-Selected"),R=this.add.image(525,304,"UI-Explainer-window");new w(t),new A(t),new w(s),new A(s),new w(i),new A(i),new w(o),new A(o),new w(r),new A(r),new w(f),new A(f),new w(C),new A(C),new w(E),new A(E),new w(R),this.slider_Up_Button_Music=t,this.slider_Up_Button_SFX=s,this.slider_Down_Button_Music=i,this.slider_Down_Button_SFX=o,this.mainMenuButton=r,this.musicButton=h,this.sFXButton=c,this.resumeButton=f,this.rulesButton=C,this.newGameButton=E,this.explainer=R,this.events.emit("scene-awake")}create(){this.editorCreate(),this.time.delayedCall(500,()=>{this.sound.pauseAll()},void 0,this),this.setCustomBehavior({button:this.mainMenuButton,upTexture:"MainMenu-Button-Selected",downTexture:"MainMenu-Button",sceneSwitch:this.goBackToTitle}),this.setCustomBehavior({button:this.resumeButton,upTexture:"Resume-Button-Selected",downTexture:"Resume-Button",sceneSwitch:this.resumeGame}),this.setCustomBehavior({button:this.newGameButton,upTexture:"NewGame-Button-Selected",downTexture:"NewGame-Button",sceneSwitch:this.restartCurrentGame}),this.setCustomBehavior({button:this.resumeButton,upTexture:"Resume-Button-Selected",downTexture:"Resume-Button",sceneSwitch:this.resumeGame}),this.setCustomBehavior({button:this.rulesButton,upTexture:"Rules-Button-Selected",downTexture:"Rules-Button",sceneSwitch:()=>{console.log("null")}}),this.setRulesButtonAgain(),this.setExplainerBehavior()}setRulesButtonAgain(){const e=w.getComponent(this.rulesButton);e.handlePointerUp=()=>{this.rulesButton.setTexture("Rules-Button-Selected"),this.showExplainer()}}setExplainerBehavior(){const e=w.getComponent(this.explainer);e.handlePointerUp=()=>{this.hideExplainer()}}setCustomBehavior(e){const{upTexture:t,downTexture:s,button:i,sceneSwitch:o}=e,r=A.getComponent(i),h=w.getComponent(i);h.handlePointerOver=()=>{r.scaleUp()},h.handlePointerOut=()=>{r.scaleDown(),i.setTexture(t)},h.handlePointerDown=()=>{d.emit(m.MENUSELECT),i.setTexture(s)},h.handlePointerUp=()=>{i.setTexture(t),o()}}showExplainer(){this.tweens.add({targets:this.explainer,x:this.scale.width/2,duration:500})}hideExplainer(){this.tweens.add({targets:this.explainer,x:525,duration:500})}restartCurrentGame(){d.emit(S.PAUSE_TO_RESTART)}goBackToTitle(){d.emit(S.PAUSE_TO_TITLE)}resumeGame(){d.emit(S.RESUME_GAME)}}class _t extends l.GameObjects.Image{constructor(e,t,s,i,o){super(e,t!=null?t:0,s!=null?s:0,i||"Back-Button",o);a(this,"currScene","Explainer");a(this,"endScale",1.2);new w(this)}start(){this.setButtonInput()}setButtonInput(){const e=w.getComponent(this);if(!e){console.error("but comp is undefined");return}e.handlePointerUp=()=>{this.setTexture("Back-Button"),this.resumeToNewGame()},e.handlePointerDown=()=>{this.setTexture("Back-Button-Selected")},e.handlePointerOver=()=>{this.scaleUp(this)},e.handlePointerOut=()=>{this.scaleDown(this),this.setTexture("Back-Button")}}scaleDown(e){const t=this.scene.tweens.addCounter({from:this.endScale,to:1,duration:300,onUpdate:()=>{const s=t.getValue();e.setScale(s)}})}scaleUp(e){const t=this.scene.tweens.addCounter({from:1,to:this.endScale,duration:300,onUpdate:()=>{const s=t.getValue();e.setScale(s)}})}resumeToNewGame(){d.emit(S.RESUME_FROM_EXPLAIN)}}class Tt extends l.Scene{constructor(){super("Explainer");a(this,"back_Button")}editorCreate(){this.add.image(160,320,"70per-Black-BG"),this.add.image(160,320,"Rules-Page");const e=new _t(this,51,83);this.add.existing(e),this.back_Button=e,this.events.emit("scene-awake")}create(){this.editorCreate(),this.back_Button.start()}}class Et extends l.Scene{constructor(){super("Boss");a(this,"player")}editorCreate(){const e=this.add.tilemap("Boss Level");e.addTilesetImage("Boss Tileset","BOSS LEVEL v1"),e.createLayer("Floor",["Boss Tileset"],0,0),e.createLayer("Walls",["Boss Tileset"],0,0);const t=new Me(this,80,576);this.add.existing(t),this.add.image(64,576,"Start-Level-Anim-Short-20"),this.player=t,this.boss_Level=e,this.events.emit("scene-awake")}create(){this.editorCreate(),d.emit(S.UPDATE_ACTIVE,"Boss")}}let We=4,Ve=12,qe=20,Je=28,G=0,Bt=!1;class Qe extends l.GameObjects.Sprite{constructor(e,t,s,i,o){super(e,t!=null?t:0,s!=null?s:0,i,o!=null?o:0);a(this,"physIcs");if(i!="Floor"){const r=new T(this);switch(r.static=!0,this.physIcs=r,i){case"SilverBlock":this.setTexture("raw-break-interact",3);break;case"CopperBlock":this.setTexture("raw-break-interact",10);break;case"GoldBlock":this.setTexture("raw-break-interact",17);break;case"NormalBlock":this.setTexture("raw-break-interact",26);break;case"ULBorder":this.setTexture("Borders",24),this.setScale(.5),r.height=14,r.width=14;break;case"UBorder":this.setTexture("Borders",25),this.setScale(.5),r.height=14,r.width=32;break;case"URBorder":this.setTexture("Borders",26),this.setScale(.5),r.height=14,r.width=14,r.offsetX=18;break;case"LBorder":this.setTexture("Borders",32),this.setScale(.5),r.height=32,r.width=14;break;case"RBorder":this.setTexture("Borders",34),this.setScale(.5),r.height=32,r.width=14,r.offsetX=18;break;case"BBorder":this.setTexture("Borders",41),this.setScale(.5),r.height=14,r.width=32,r.offsetY=18;break;case"BLBorder":this.setTexture("Borders",40),this.setScale(.5),r.height=14,r.width=14,r.offsetY=18;break;case"BRBorder":this.setTexture("Borders",42),this.setScale(.5),r.height=14,r.width=14,r.offsetX=18,r.offsetY=18;break}}else this.setTexture("floor",l.Math.Between(0,7))}onBulletHit(e,t){if(!!t&&(G=parseInt(t==null?void 0:t.frame.name),G++,G!=We+1)){{if(G==Ve+1)return;if(G==qe+1)return;if(G==Je+1)return}(t==null?void 0:t.texture.key)!="Borders"&&!Bt&&(t==null||t.setFrame(G))}}onPlayerHit(e,t){let s=parseInt(t==null?void 0:t.frame.name);s==We?(u.changeHealthBy(3),u.changeEnergyBy(3),u.changeSanityBy(3),t==null||t.destroy()):s==Ve?(u.changeHealthBy(1),u.changeEnergyBy(1),u.changeSanityBy(1),t==null||t.destroy()):s==qe?(u.changeHealthBy(5),u.changeEnergyBy(5),u.changeSanityBy(5),t==null||t.destroy()):s==Je&&(t==null||t.destroy())}}class $e extends _{constructor(e){super(e);a(this,"gameObject");a(this,"LocX",0);a(this,"LocY",0);a(this,"width",32);a(this,"height",32);a(this,"zone");this.gameObject=e,e.__ZoneComp=this;const{scene:t}=this.gameObject;this.zone=t.add.zone(this.LocX,this.LocY,this.width,this.height),t.physics.world.enable(this.zone)}static getComponent(e){return e.__ZoneComp}}class Ct extends l.GameObjects.Image{constructor(e,t,s,i,o){super(e,t!=null?t:0,s!=null?s:0,i||"raw-break-interact",o!=null?o:88);const r=new $e(this);r.width=25,r.height=25;const h=new T(this);h.static=!0,this.setFrame(88+l.Math.Between(0,3))}getZone(){return $e.getComponent(this).zone}start(){const e=this.scene.scene.get(this.scene.scene.key);!(!e||!e.player)}}class Dt extends l.GameObjects.Image{constructor(e,t,s,i,o){super(e,t!=null?t:0,s!=null?s:0,i||"EndTunnel",o);const r=new T(this);r.static=!0}}class y{constructor(e,t,s,i,o){a(this,"x");a(this,"y");a(this,"width");a(this,"height");a(this,"tag");this.x=e,this.y=t,this.width=s,this.height=i,this.tag=o}}class Mt{constructor(){a(this,"biome",1)}CreateWorld(e){var t=new Array;e/=6,console.log(`Chunk amount generated by Drand (excluding end): ${20+Math.round(e/999*100)}`);var s=20+Math.round(e/999*100);t.push.apply(t,this.CreateChunk(s,"start")),t.push.apply(t,this.CreateChunk(0,"end"));for(var i=1;i<s;i++){let o=["empty","empty","semi-empty","semi-empty","semi-empty","blocked","trap","trap"];i>s/2?this.biome=3:i>s/3&&(this.biome=2),this.biome=2,t.push.apply(t,this.CreateChunk(s-i,o[Math.round(Math.random()*(o.length-1))]))}return t}CreateChunk(e,t){var s=new Array;switch(t){case"empty":for(let o=0;o<10;o++)for(let r=0;r<20;r++)o==0?s.push(new y(o*32,r*32+e*640,32,32,"border-left")):o==9?s.push(new y(o*32,r*32+e*640,32,32,"border-right")):s.push(new y(o*32,r*32+e*640,32,32,"floor"));break;case"semi-empty":for(let o=0;o<10;o++)for(let r=0;r<20;r++)o==0?s.push(new y(o*32,r*32+e*640,32,32,"border-left")):o==9?s.push(new y(o*32,r*32+e*640,32,32,"border-right")):Math.random()<=.25?(s.push(new y(o*32,r*32+e*640,32,32,"floor")),s.push(this.CreateWall(o*32,r*32+e*640))):s.push(new y(o*32,r*32+e*640,32,32,"floor"));break;case"blocked":for(let o=0;o<10;o++)for(let r=0;r<20;r++)o==0?s.push(new y(o*32,r*32+e*640,32,32,"border-left")):o==9?s.push(new y(o*32,r*32+e*640,32,32,"border-right")):r<=1||r>=18?Math.random()<=.75?s.push(new y(o*32,r*32+e*640,32,32,"floor")):(s.push(new y(o*32,r*32+e*640,32,32,"floor")),s.push(this.CreateWall(o*32,r*32+e*640))):Math.random()<=.1?s.push(new y(o*32,r*32+e*640,32,32,"floor")):(s.push(new y(o*32,r*32+e*640,32,32,"floor")),s.push(this.CreateWall(o*32,r*32+e*640)));break;case"start":for(let o=0;o<10;o++)for(let r=0;r<20;r++)o==0&&r==19?s.push(new y(o*32,r*32+e*640,32,32,"border-bottom-left")):o==9&&r==19?s.push(new y(o*32,r*32+e*640,32,32,"border-bottom-right")):r==19?s.push(new y(o*32,r*32+e*640,32,32,"border-bottom")):o==0?s.push(new y(o*32,r*32+e*640,32,32,"border-left")):o==9?s.push(new y(o*32,r*32+e*640,32,32,"border-right")):s.push(new y(o*32,r*32+e*640,32,32,"floor"));break;case"end":for(let o=0;o<10;o++)for(let r=0;r<19;r++)o==0&&r==0?s.push(new y(o*32,32+r*32+e*640,32,32,"border-top-left")):o==9&&r==0?s.push(new y(o*32,32+r*32+e*640,32,32,"border-top-right")):o==4&&r==0?(s.push(new y(o*32,32+r*32+e*640,32,32,"floor")),s.push(new y(32+o*32,r*32+e*640+32,64,64,"tunnel"))):r==0&&o!=5?s.push(new y(o*32,32+r*32+e*640,32,32,"border-top")):o==0?s.push(new y(o*32,32+r*32+e*640,32,32,"border-left")):o==9?s.push(new y(o*32,32+r*32+e*640,32,32,"border-right")):s.push(new y(o*32,32+r*32+e*640,32,32,"floor"));break;case"trap":switch(this.biome){case 1:s=this.CreateMud(e);break;case 2:var i=Math.random();i<=.33?s=this.CreateMud(e):i>.33&&(s=this.CreateProxyMine(e));break;case 3:var i=Math.random();i<=.525?s=this.CreateMud(e):i>.525&&i<=.5?s=this.CreateProxyMine(e):i>.5&&(s=this.CreatePoisonCloud(e));break}break}return s}CreateMud(e){var t=new Array;for(let s=0;s<10;s++)for(let i=0;i<20;i++)if(s==0)t.push(new y(s*32,i*32+e*640,32,32,"border-left"));else if(s==9)t.push(new y(s*32,i*32+e*640,32,32,"border-right"));else{let o=Math.random();o<=.05?(t.push(new y(s*32,i*32+e*640,32,32,"floor")),t.push(new y(s*32,i*32+e*640,32,32,"mud"))):o<=.25?(t.push(new y(s*32,i*32+e*640,32,32,"floor")),t.push(this.CreateWall(s*32,i*32+e*640))):t.push(new y(s*32,i*32+e*640,32,32,"floor"))}return t}CreateProxyMine(e){var t=new Array;for(let s=0;s<10;s++)for(let i=0;i<20;i++)if(s==0)t.push(new y(s*32,i*32+e*640,32,32,"border-left"));else if(s==9)t.push(new y(s*32,i*32+e*640,32,32,"border-right"));else{let o=Math.random();o<=.05?(t.push(new y(s*32,i*32+e*640,32,32,"floor")),t.push(new y(s*32,i*32+e*640,32,32,"proxy-mine"))):o<=.25?(t.push(new y(s*32,i*32+e*640,32,32,"floor")),t.push(this.CreateWall(s*32,i*32+e*640))):t.push(new y(s*32,i*32+e*640,32,32,"floor"))}return t}CreatePoisonCloud(e){var t=new Array;for(let s=0;s<10;s++)for(let i=0;i<20;i++)if(s==0)t.push(new y(s*32,i*32+e*640,32,32,"border-left"));else if(s==9)t.push(new y(s*32,i*32+e*640,32,32,"border-right"));else{let o=Math.random();o<=.02?(t.push(new y(s*32,i*32+e*640,32,32,"floor")),t.push(new y(s*32,i*32+e*640,32,32,"poison-cloud"))):o<=.25?(t.push(new y(s*32,i*32+e*640,32,32,"floor")),t.push(this.CreateWall(s*32,i*32+e*640))):t.push(new y(s*32,i*32+e*640,32,32,"floor"))}return t}CreateWall(e,t){let s=new y(e,t,32,32,""),i=Math.random()*100,o=10,r=15,h=25,c=50;return i<=o?s.tag="gold":i>=o&&i<=r+o?s.tag="silver":i>=r+o&&i<=h+r+o?s.tag="copper":i>=c&&(s.tag="normal"),s}}class ke extends l.GameObjects.Sprite{constructor(e,t,s,i,o){super(e,t!=null?t:0,s!=null?s:0,i||"raw-break-interact",o!=null?o:100);a(this,"wall");this.scene.physics.add.existing(this),this.play("trap-explode-projectile")}DamagePlayer(e,t){}}class Ze extends l.GameObjects.Sprite{constructor(e,t,s,i,o){super(e,t!=null?t:0,s!=null?s:0,i||"raw-break-interact",o!=null?o:96);a(this,"player");a(this,"timer");a(this,"walls");this.scene.physics.add.existing(this),this.StartTimer()}StartTimer(){this.timer=this.scene.time.addEvent({delay:3e3,callback:()=>{this.CreateBlasts()},loop:-1})}CreateBlasts(){if(!!this.player){var e=Math.abs(this.player.x)-Math.abs(this.x),t=Math.abs(this.player.y)-Math.abs(this.y);if(!!this)if(this.play("trap-explode"),e<=150&&t<=150){const s=new ke(this.scene,this.x+10,this.y);this.scene.add.existing(s),s.body.setVelocity(70,0);const o=new ke(this.scene,this.x,this.y+10);this.scene.add.existing(o),o.angle=90,o.body.setVelocity(0,70);const h=new ke(this.scene,this.x-10,this.y);this.scene.add.existing(h),h.angle=180,h.body.setVelocity(-70,0);const f=new ke(this.scene,this.x-10,this.y);this.scene.add.existing(f),f.angle=-90,f.body.setVelocity(0,-70);const E=[s,o,h,f];this.scene.physics.add.collider(E,this.walls,this.onDestroy),this.scene.physics.add.collider(this.player,E,this.playerDamage)}else this.play("trap-idle")}}onDestroy(e){e.destroy()}playerDamage(e,t){t.destroy(),u.changeHealthBy(-10)}}class xt{static GenerateWorld(e){var t=new Array,s=new Array,i=new Array,o=new Mt;console.log("from registry",e.game.registry.get("seed"));const r=e.game.registry.get("seed");e.events.emit("send-seed",r);for(var h=o.CreateWorld(Math.round(r)),c=0;c<h.length;c++)if(h[c].tag=="floor")s.push(this.Create(h[c].x,h[c].y,"Floor",0,e));else if(h[c].tag=="gold")i.push(this.Create(h[c].x,h[c].y,"GoldBlock",Math.round(Math.random()*3),e));else if(h[c].tag=="silver")i.push(this.Create(h[c].x,h[c].y,"SilverBlock",Math.round(Math.random()*3),e));else if(h[c].tag=="copper")i.push(this.Create(h[c].x,h[c].y,"CopperBlock",Math.round(Math.random()*3),e));else if(h[c].tag=="normal")i.push(this.Create(h[c].x,h[c].y,"NormalBlock",Math.round(Math.random()*4),e));else if(h[c].tag.slice(0,6)=="border")switch(h[c].tag){case"border-right":i.push(this.Create(h[c].x,h[c].y,"RBorder",0,e));break;case"border-left":i.push(this.Create(h[c].x,h[c].y,"LBorder",0,e));break;case"border-bottom":i.push(this.Create(h[c].x,h[c].y,"BBorder",0,e));break;case"border-bottom-right":i.push(this.Create(h[c].x,h[c].y,"BRBorder",0,e));break;case"border-bottom-left":i.push(this.Create(h[c].x,h[c].y,"BLBorder",0,e));break;case"border-top":i.push(this.Create(h[c].x,h[c].y,"UBorder",0,e));break;case"border-top-right":i.push(this.Create(h[c].x,h[c].y,"URBorder",0,e));break;case"border-top-left":i.push(this.Create(h[c].x,h[c].y,"ULBorder",0,e));break}else h[c].tag=="mud"?e.mud.push(new Ct(e,h[c].x+16,h[c].y+16)):h[c].tag=="proxy-mine"?e.proxymines.push(new Ze(e,h[c].x+16,h[c].y+16)):h[c].tag=="poison-cloud"||h[c].tag=="tunnel"&&(e.tunnel=new Dt(e,h[c].x,h[c].y-32));return t.push.apply(t,s),t.push.apply(t,i),t}static Create(e,t,s,i,o){var r=new Qe(o,e+16,t+16,s);switch(s){case"NormalBlock":r.setFrame(24+i);break;case"CopperBlock":r.setFrame(8+i);break;case"SilverBlock":r.setFrame(0+i);break;case"GoldBlock":r.setFrame(16+i);break}return r}}class Ot{static HideIrrelevant(e,t,s){t-=t%640,s-=s%640,s-=640;for(var i=320,o=1920,r=0;r<e.length;r++)e[r].x>=t&&e[r].x<=t+i&&e[r].y>=s&&e[r].y<=s+o?e[r].visible=!0:e[r].visible=!1;return e}}var Q;class At extends l.Scene{constructor(){super("Chunk");a(this,"player");a(this,"obstacles");a(this,"platformer_fun");a(this,"blocks");a(this,"mud",new Array);a(this,"proxymines",new Array);a(this,"poisonclouds",new Array);a(this,"pSDRobot");Ce(this,Q,void 0);a(this,"enemyA");a(this,"enemyTeam");a(this,"tunnel");a(this,"timer");a(this,"bulletGroup");a(this,"lastfired",0)}editorCreate(){const e=new Me(this,148,474);this.add.existing(e);const t=new g(this,368,480);this.add.existing(t);const s=[t];this.player=e,this.obstacles=s,this.events.emit("scene-awake")}create(){this.editorCreate(),d.emit(S.UPDATE_ACTIVE,"Chunk"),this.player.play("player-front-idle"),this.startWorldGen(),this.events.once("send-seed",r=>{this.player.x=48,this.player.y=640*(20+Math.round(r/3/999*100))+640-this.player.height},this);const e=new Ie(this,-this.player.x,this.player.y);this.add.existing(e),this.pSDRobot=e;const t=new ve(this,this.player.x+30,this.player.y+250);this.add.existing(t);const s=[t];this.initObjectPool(),this.enemyA=t,this.enemyTeam=s,X.getComponent(this.player).setActive(!0);const o=new Qe(this);new Ze(this),De(this,Q,q.getComponent(this.player)),this.enemyTeam.forEach(r=>{x.getComponent(r).activate(),r.startMovement()}),this.SwarmGenerator(80,384,5,3e3,0),this.SwarmGenerator(192,384,5,3e3,1500),this.events.on("create-bullet",this.handleBulletUpdate,this),this.events.on("deploy-PSD",this.deployPSD,this),this.events.on("takeback-PSD",this.takeBackPSD,this),this.events.on("gen-psd-field",this.addColliderEnemyField,this),this.physics.add.overlap(this.bulletGroup,this.blocks,this.onBulletBlockHit),this.physics.add.collider(this.bulletGroup,this.mud,this.onBulletMudHit),this.physics.add.collider(this.bulletGroup,this.proxymines,this.DestroyBlast),this.physics.add.overlap(this.bulletGroup,this.enemyTeam,this.handleBulletSwarm,void 0,this),this.physics.add.collider(this.player,this.blocks,o.onPlayerHit),this.physics.add.collider(this.player,this.mud,()=>{this.onPlayerMud()}),this.physics.add.collider(this.player,this.tunnel,this.switchtoBossScene),this.physics.add.collider(this.player,this.enemyTeam,this.handlePlayerSwarm,void 0,this),this.physics.add.collider(this.enemyTeam,this.enemyTeam),this.physics.add.collider(this.enemyTeam,this.blocks)}update(){this.handleDepthSort(),this.optimize()}startWorldGen(){const e=xt.GenerateWorld(this);for(let t=0;t<e.length;t++)this.add.existing(e[t]);this.blocks=e;for(let t=0;t<this.mud.length;t++)this.add.existing(this.mud[t]);for(let t=0;t<this.proxymines.length;t++)this.add.existing(this.proxymines[t]),this.proxymines[t].player=this.player,this.proxymines[t].walls=this.blocks;this.add.existing(this.tunnel)}optimize(){Ot.HideIrrelevant(this.blocks,this.player.x,this.player.y)}handleBlockCollision(e,t){const s=t;s.texture.key!=="Borders"&&(s.texture.key==="raw-break-interact"&&console.log("this is a mine"),console.log(s.texture))}layerDebug(e){const t=this.add.graphics().setAlpha(.75);e.renderDebug(t,{tileColor:null,collidingTileColor:new l.Display.Color(243,134,48,255),faceColor:new l.Display.Color(40,39,37,255)})}handleDepthSort(){this.children.each(e=>{const t=e;!W.getComponent(t)||t.setDepth(t.y)})}handleBulletUpdate(e){const t=this.bulletGroup.get(),s=500;t&&this.time.now>this.lastfired&&(t.fire(this.player.x,this.player.y),this.setBulletRotationAndVel(t,e),this.lastfired=this.time.now+s)}initObjectPool(){this.bulletGroup=this.add.group({classType:Ye,maxSize:50,runChildUpdate:!0})}setBulletRotationAndVel(e,t){const s=B.getComponent(e);if(!!s)switch(t){case p.LEFT:{e.angle=0,s.moveLeft();break}case p.RIGHT:{e.angle=180,s.moveRight();break}case p.BACK:{e.angle=90,s.moveUp();break}case p.FRONT:{e.angle=270,s.moveDown();break}}}handlePlayerSwarm(e,t){const s=t;u.changeHealthBy(-10),s.despawn()}createSingleSwarm(e,t){const s=new ve(this,e,t);this.add.existing(s),this.enemyTeam.push(s);const i=x.getComponent(s);i.setTarget(this.player),i.range=300,i.deadRangeX=20}createMoreSwarm(){const e=[80,128,160,192],t=0;for(let s=0;s<e.length;s++){const i=new ve(this,e[s],t);this.add.existing(i);const o=x.getComponent(i);o.range=300,o.deadRangeX=35,this.enemyTeam.push(i)}}addColliderEnemyField(){!this.pSDRobot.outerField||!this.pSDRobot.innerField||(this.physics.add.collider(this.enemyTeam,this.pSDRobot.outerField.getAll(),this.handleEnemyFieldCollides,void 0,this),this.physics.add.collider(this.enemyTeam,this.pSDRobot.innerField.getAll(),this.handleEnemyFieldCollides,void 0,this))}handleEnemyFieldCollides(e,t){const s=e,i=t,o=i.parentContainer;x.getComponent(s).deactivate(),s.enrage();let h=5;const c=this.tweens.create({targets:s,duration:200,onStart:()=>{s.setSMState(D.IDLE),s.body.setVelocity(h)},onComplete:()=>{s.setSMState(D.WALK)}});o.damage(s.attack),this.time.delayedCall(500,()=>{i.y<s.y?(h=4,c.play()):i.y>s.y&&(h=-4,c.play())})}enrageEnemy(e,t){const s=e;x.getComponent(s).deactivate(),s.enrage()}ActivateEnemy(){this.enemyTeam.forEach(e=>{x.getComponent(e).activate(),e.startMovement()})}handleBulletSwarm(e,t){const s=e,i=t;s.despawn(),i.emit("stay-still"),i.destoryAndDetach();const o=this.enemyTeam.findIndex(r=>i);this.enemyTeam.splice(o,1)}SwarmGenerator(e,t,s,i,o=0){return this.time.addEvent({repeat:s,delay:i,startAt:o,callback:this.createSingleSwarm,callbackScope:this,args:[e,t]})}deployPSD(){const e=q.getComponent(this.player);if(!e){console.error("selection square is undefined");return}const{x:t,y:s}=e.getSelectionSquare();this.pSDRobot.spawn(t,s),this.pSDRobot.deploy()}takeBackPSD(){!this.checkSelectionPSDOverlap()||(this.pSDRobot.returnToPlayer(),this.player.emit("player-recover-psd"),this.enemyTeam.forEach(e=>{x.getComponent(e).activate()}))}checkSelectionPSDOverlap(){if(!ye(this,Q)){console.error("selection square is undefined");return}const e=ye(this,Q).getSelectionSquare().getBounds(),t=this.pSDRobot.getBounds();return l.Geom.Intersects.RectangleToRectangle(e,t)}onBulletBlockHit(e,t){const s=e,i=t;parseInt(i.frame.name)==4||parseInt(i.frame.name)==12||parseInt(i.frame.name)==20||parseInt(i.frame.name)==28||(s.despawn(),i.onBulletHit(s,i))}onBulletMudHit(e,t){e.despawn(),t.destroy()}onPlayerMud(){this.player.inMudCondition(),this.timer=this.time.addEvent({delay:5e3,callback:()=>{this.player.outMudCondition()}})}DestroyBlast(e,t){e.despawn();const i=t;i.timer.destroy(),i.destroy()}switchtoBossScene(){d.emit(S.TO_BOSS)}}Q=new WeakMap;const ze="8990e7a9aaed2ffed73dbd7092123d6f289930540d7651336225dc172e51b2ce",Rt=["https://api.drand.sh","https://drand.cloudflare.com"];async function Lt(){const n={chainHash:ze};return(await(await ht.wrap(lt.forURLs(Rt,ze),n)).get()).randomness}class et extends l.GameObjects.Image{constructor(e,t,s,i,o){super(e,t!=null?t:0,s!=null?s:0,i||"MainMenu-Button-Red",o);a(this,"currentScene","GameOver");a(this,"endScale",1.2);new w(this)}start(){this.setButtonInput()}setButtonInput(){const e=w.getComponent(this);if(!e){console.error("but comp is undefined");return}e.handlePointerUp=()=>{this.setTexture("MainMenu-Button-Red"),this.goToTitle()},e.handlePointerDown=()=>{this.setTexture("MainMenu-Button-Red-Selected")},e.handlePointerOver=()=>{this.scaleUp(this)},e.handlePointerOut=()=>{this.scaleDown(this),this.setTexture("MainMenu-Button-Red")}}goToTitle(){d.emit(S.TO_TITLE,this.currentScene)}scaleDown(e){const t=this.scene.tweens.addCounter({from:this.endScale,to:1,duration:300,onUpdate:()=>{const s=t.getValue();e.setScale(s)}})}scaleUp(e){const t=this.scene.tweens.addCounter({from:1,to:this.endScale,duration:300,onUpdate:()=>{const s=t.getValue();e.setScale(s)}})}}class tt extends l.GameObjects.Image{constructor(e,t,s,i,o){super(e,t!=null?t:0,s!=null?s:0,i||"NewGame-Button-Red",o);a(this,"currentScene","GameOver");a(this,"endScale",1.2);new w(this)}start(){this.setButtonInput()}setButtonInput(){const e=w.getComponent(this);e.handlePointerUp=()=>{this.setTexture("NewGame-Button-Red"),this.goToNewGame()},e.handlePointerDown=()=>{this.setTexture("NewGame-Button-Red-Selected")},e.handlePointerOver=()=>{this.scaleUp(this)},e.handlePointerOut=()=>{this.scaleDown(this),this.setTexture("NewGame-Button-Red")}}goToNewGame(){d.emit(S.BACK_TO_GAME,this.currentScene)}scaleDown(e){const t=this.scene.tweens.addCounter({from:this.endScale,to:1,duration:300,onUpdate:()=>{const s=t.getValue();e.setScale(s)}})}scaleUp(e){const t=this.scene.tweens.addCounter({from:1,to:this.endScale,duration:300,onUpdate:()=>{const s=t.getValue();e.setScale(s)}})}}class Gt extends l.Scene{constructor(){super("YouSurvived");a(this,"mainMenu_Button_Red");a(this,"newGame_Button_Red")}editorCreate(){this.add.image(160,320,"70per-Black-BG"),this.add.image(65,562,"ByTeam");const e=this.add.image(160,320,"Logo v2");e.scaleX=.885327816705385,e.scaleY=.885327816705385;const t=this.add.image(160,180,"YouSurvived");t.scaleX=3.5937905673970443,t.scaleY=3.5937905673970443;const s=new et(this,160,386);this.add.existing(s);const i=new tt(this,160,420);this.add.existing(i),s.currentScene="YouSurvived",i.currentScene="YouSurvived",this.mainMenu_Button_Red=s,this.newGame_Button_Red=i,this.events.emit("scene-awake")}create(){this.editorCreate(),this.mainMenu_Button_Red.start(),this.newGame_Button_Red.start()}}class Ft extends l.Scene{constructor(){super("GameOver");a(this,"gameOverLogo");a(this,"mainMenu_Button_Red");a(this,"newGame_Button_Red")}editorCreate(){this.add.image(160,316,"Dithered Triangles");const e=this.add.sprite(160,320,"GameOver-Anim-13");e.scaleX=2.06047846236235,e.scaleY=2.06047846236235;const t=new et(this,160,448);this.add.existing(t);const s=new tt(this,160,480);this.add.existing(s),t.currentScene="GameOver",s.currentScene="GameOver",this.gameOverLogo=e,this.mainMenu_Button_Red=t,this.newGame_Button_Red=s,this.events.emit("scene-awake")}create(){this.editorCreate(),this.gameOverLogo.play("gameover-logo",!0),this.mainMenu_Button_Red.start(),this.newGame_Button_Red.start()}}class Ht extends l.Scene{constructor(){super("Boot");a(this,"seed",0)}preload(){this.load.pack("pack","assets/preload-asset-pack.json")}create(){this.genSeed(this.seed),this.scene.start("Preload")}async genSeed(e){e=await Lt(),console.log(`Raw Drand Randomness returned: ${e}`),e=e.replace(/\D/g,""),e=e.slice(0,3),e=parseInt(e),console.log(e),console.log(`boot scene seed: ${e}`),this.game.registry.set("seed",e)}}const Ut=new l.Game({width:320,height:640,backgroundColor:"#2f2f2f",scale:{mode:l.Scale.ScaleModes.FIT,autoCenter:l.Scale.Center.CENTER_BOTH},physics:{default:"arcade",arcade:{gravity:{y:0},debug:!1}},scene:[Ht,bt,ut,vt,kt,wt,At,Pt,Tt,Et,Gt,Ft]});Ut.scene.start("Boot");
